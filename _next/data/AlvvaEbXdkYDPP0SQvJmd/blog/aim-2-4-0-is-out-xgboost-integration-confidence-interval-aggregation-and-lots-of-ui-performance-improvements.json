{"pageProps":{"post":{"title":"Aim 2.4.0 is out! XGBoost integration, Confidence interval aggregation and lots of UI performance improvements!","date":"2021-05-18T13:58:29.035Z","author":"Gev Soghomonian","description":"Aim 2.4.0 is out! XGBoost integration, Confidence interval aggregation and lots of UI performance improvements!","slug":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements","image":"https://aimstack.io/wp-content/uploads/2022/02/xgboost.png","draft":false,"categories":["New Releases"],"body":{"raw":"[Aim](https://github.com/aimhubio/aim) 2.4.0 featuring XGBoost Integration is out ! Thanks to the community for feedback and support on our journey towards democratizing MLOps tools.\n\nCheck out the updated Aim at [play.aimstack.io](http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==).\n\nFor this release, there have been lots of performance updates and small tweaks to the UI. Above all, this post highlights the two features of Aim 2.4.0. Please see the full list of changes [here](https://github.com/aimhubio/aim/milestone/6?closed=1).\n\n## XGBoost Inegration\n\n\n\nTo begin with,  `aim.callback` is now available that exports `AimCallback` to be passed to the `xgb.train` as a callback to log the experiments.\n\nCheck out this [blogpost](https://aimstack.io/blog/tutorials/an-end-to-end-example-of-aim-logger-used-with-xgboost-library/) for additional details on how to integrate Aim to your XGBoost code.\n\n## Confidence Interval as the aggregation method\n\n![](https://aimstack.io/wp-content/uploads/2022/02/confidence_interval.png)\n\nNow you can use confidence intervals for aggregation. The community has been requesting this feature, since it completes the list of necessary aggregation methods. As a result, if you have outlier metrics in your group, confidence interval will show logical aggregation and get better comparison of the groups. \n\n## Learn More\n\n\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nCheck out the latest [Aim integration](https://aimstack.io/aim-v2-2-0-hugging-face-integration/)!\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> 2.4.0 featuring XGBoost Integration is out ! Thanks to the community for feedback and support on our journey towards democratizing MLOps tools.</p>\n<p>Check out the updated Aim at <a href=\"http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==\">play.aimstack.io</a>.</p>\n<p>For this release, there have been lots of performance updates and small tweaks to the UI. Above all, this post highlights the two features of Aim 2.4.0. Please see the full list of changes <a href=\"https://github.com/aimhubio/aim/milestone/6?closed=1\">here</a>.</p>\n<h2>XGBoost Inegration</h2>\n<p>To begin with,  <code>aim.callback</code> is now available that exports <code>AimCallback</code> to be passed to the <code>xgb.train</code> as a callback to log the experiments.</p>\n<p>Check out this <a href=\"https://aimstack.io/blog/tutorials/an-end-to-end-example-of-aim-logger-used-with-xgboost-library/\">blogpost</a> for additional details on how to integrate Aim to your XGBoost code.</p>\n<h2>Confidence Interval as the aggregation method</h2>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/confidence_interval.png\" alt=\"\"></p>\n<p>Now you can use confidence intervals for aggregation. The community has been requesting this feature, since it completes the list of necessary aggregation methods. As a result, if you have outlier metrics in your group, confidence interval will show logical aggregation and get better comparison of the groups. </p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Check out the latest <a href=\"https://aimstack.io/aim-v2-2-0-hugging-face-integration/\">Aim integration</a>!</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","_raw":{"sourceFilePath":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","sourceFileName":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements"},"type":"Post"},"posts":[{"title":"Aim 1.3.5 — Activity View and X-axis alignment","date":"2021-02-05T11:16:41.748Z","author":"Gev Soghomonian","description":"Aim v1.3.5 is now available. Thanks to the incredible Aim community for the feedback and support on building democratized open source MLOps tools. Check out the new features […]","slug":"aim-1-3-5-—-activity-view-and-x-axis-alignment","image":"/images/dynamic/1st.gif","draft":false,"categories":["New Releases"],"body":{"raw":"\n\n## Aim Release — Activity View and X-axis alignment\n\n[Aim](https://github.com/aimhubio/aim) v1.3.5 is now available. Thanks to the incredible [Aim community](https://discord.com/invite/zXq2NfVdtF) for the feedback and support on building democratized open source AI dev tools.\n\nCheck out the new features at play.aimstack.io\n\nHere are the highlights of the features:\n\n## Activity View on the Dashboard\n\nThe **Activity View** shows the daily experiment runs. With one click you can search each day’s runs and explore them straight away\n\n**Statistics** displays the overall count of [Experiments and Runs. ](https://github.com/aimhubio/aim#concepts)\n\n![](/images/dynamic/1st.gif \"The new dashboard in action!\")\n\n## **X-axis alignment by epoch**\n\nX-axis alignment adds another layer of superpower for metric comparison. If you have tracked metrics in different time-frequencies (e.g. train loss — 1000 steps, validation loss — 15 steps) then you can align them by epoch, relative time or absolute time.\n\n![](/images/dynamic/2nd.gif \"No more misaligned metrics!\")\n\n## **Ordering runs both on Explore and on Dashboard**\n\n\n\nNow you can order runs both on the Dashboard and on the Explore. Sort the runs by a hyperparam value of metric value on dashboard and explore.\n\nOn Explore, when sorted by a hyperparam that’s also used for dividing into subplots, the subplots will be positioned by the hyperparam value too.\n\n![](/images/dynamic/3.gif \"Sort the runs both on Dashboard and Explore!\")\n\n## Learn More\n\n\n\nWe have been working on Aim for the past 6 months and excited to see this much interest from the community.\n\nWe are working tirelessly for adding new community-driven features to Aim (and those features have been doubling every month 😊). Try out Aim, join the [Aim community](https://aimstack.slack.com/?redir=%2Fssb%2Fredirect), share your feedback.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support 🙌.","html":"<h2>Aim Release — Activity View and X-axis alignment</h2>\n<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> v1.3.5 is now available. Thanks to the incredible <a href=\"https://discord.com/invite/zXq2NfVdtF\">Aim community</a> for the feedback and support on building democratized open source AI dev tools.</p>\n<p>Check out the new features at play.aimstack.io</p>\n<p>Here are the highlights of the features:</p>\n<h2>Activity View on the Dashboard</h2>\n<p>The <strong>Activity View</strong> shows the daily experiment runs. With one click you can search each day’s runs and explore them straight away</p>\n<p><strong>Statistics</strong> displays the overall count of <a href=\"https://github.com/aimhubio/aim#concepts\">Experiments and Runs. </a></p>\n<p><img src=\"/images/dynamic/1st.gif\" alt=\"\" title=\"The new dashboard in action!\"></p>\n<h2><strong>X-axis alignment by epoch</strong></h2>\n<p>X-axis alignment adds another layer of superpower for metric comparison. If you have tracked metrics in different time-frequencies (e.g. train loss — 1000 steps, validation loss — 15 steps) then you can align them by epoch, relative time or absolute time.</p>\n<p><img src=\"/images/dynamic/2nd.gif\" alt=\"\" title=\"No more misaligned metrics!\"></p>\n<h2><strong>Ordering runs both on Explore and on Dashboard</strong></h2>\n<p>Now you can order runs both on the Dashboard and on the Explore. Sort the runs by a hyperparam value of metric value on dashboard and explore.</p>\n<p>On Explore, when sorted by a hyperparam that’s also used for dividing into subplots, the subplots will be positioned by the hyperparam value too.</p>\n<p><img src=\"/images/dynamic/3.gif\" alt=\"\" title=\"Sort the runs both on Dashboard and Explore!\"></p>\n<h2>Learn More</h2>\n<p>We have been working on Aim for the past 6 months and excited to see this much interest from the community.</p>\n<p>We are working tirelessly for adding new community-driven features to Aim (and those features have been doubling every month 😊). Try out Aim, join the <a href=\"https://aimstack.slack.com/?redir=%2Fssb%2Fredirect\">Aim community</a>, share your feedback.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support 🙌.</p>"},"_id":"aim-1-3-5-—-activity-view-and-x-axis-alignment.md","_raw":{"sourceFilePath":"aim-1-3-5-—-activity-view-and-x-axis-alignment.md","sourceFileName":"aim-1-3-5-—-activity-view-and-x-axis-alignment.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-1-3-5-—-activity-view-and-x-axis-alignment"},"type":"Post"},{"title":"Aim 1.3.8 — Enhanced Context Table and Advanced Group Coloring","date":"2021-03-01T11:09:06.858Z","author":"Gev Soghomonian","description":"Aim 1.3.8 featuring Advanced Group Coloring for AI metrics  is now available. ","slug":"aim-1-3-8-—-enhanced-context-table-and-advanced-group-coloring","image":"https://miro.medium.com/max/1400/1*l27Xjb6pYIMdEkABLkRBRA.webp","draft":false,"categories":["New Releases"],"body":{"raw":"\n\n[Aim](https://aimstack.io/) 1.3.8 is now available. Thanks to the incredible Aim community for the feedback and support on building democratized open-source AI dev tools\n\nCheck out the new features at [play.aimstack.io](http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjpmYWxzZSwiaW5kaWNhdG9yIjpmYWxzZSwieEFsaWdubWVudCI6InN0ZXAiLCJwb2ludHNDb3VudCI6NTB9fSwiZm9jdXNlZCI6eyJjaXJjbGUiOnsiYWN0aXZlIjp0cnVlLCJzdGVwIjoxNCwicnVuSGFzaCI6IjRiY2Y4ZDUyLWZjYTgtMTFlYS05MDJiLTBhMTk1NDdlYmIyZSIsIm1ldHJpY05hbWUiOiJsb3NzIiwidHJhY2VDb250ZXh0IjoiZXlKemRXSnpaWFFpT2lKMFpYTjBJbjAifX19LCJzZWFyY2giOnsicXVlcnkiOiJsb3NzLCBibGV1IGlmIGhwYXJhbXMubGVhcm5pbmdfcmF0ZSAhPSAwLjAwMDAxIGFuZCBjb250ZXh0LnN1YnNldCA9PSB0ZXN0IiwidiI6MX0sImNvbnRleHRGaWx0ZXIiOnsiZ3JvdXBCeUNvbG9yIjpbInBhcmFtcy5kYXRhc2V0LnByZXByb2MiXSwiZ3JvdXBCeVN0eWxlIjpbXSwiZ3JvdXBCeUNoYXJ0IjpbIm1ldHJpYyJdLCJhZ2dyZWdhdGVkIjpmYWxzZSwic2VlZCI6eyJjb2xvciI6MTAsInN0eWxlIjoxMH0sInBlcnNpc3QiOnsiY29sb3IiOmZhbHNlLCJzdHlsZSI6ZmFsc2V9fX0=).\n\nHere are the more notable changes:\n\n### Enhanced Context Table\n\n\n\nThe context table used to not use the screen real-estate effectively — an empty line per grouping, non-efficient column management (imagine you have 200 columns to deal with).\n\nSo we have made 3 changes to tackle this problem\n\n### New table groups view\n\nBelow is the new modified look of the table. Here is what’s changed:\n\n* The empty per group is removed\n* In addition to the group details popover, there is an in-place list group config is available for instant lookup\n\n![](https://miro.medium.com/max/1400/1*l27Xjb6pYIMdEkABLkRBRA.webp \"New improved Aim Context Table on Explore\")\n\n\n\n* **\\[In Progress for next release]** Column resize — this will allow to manage the wide columns and free much-needed screen real-estate for the data that matters.\n\n### Column Management\n\n\n\nThis feature allows to seamlessly pin the important columns to both sides of the table and hide the useless columns in between.\n\nYou can also re-order the columns by dragging the mid-section up/down.\n\nThis is super-handy when dealing with 100s of columns on the table for parameters.\n\n![](https://miro.medium.com/max/1400/1*71RL39uLxxr3vnxMhn1uKg.webp \"Drag columns left and right to pin, search and disable less important ones\")\n\n\n\n### Advanced Group Coloring\n\n\n\nThis is the latest iteration over the group coloring.\n\n* Now Aim enables persistent coloring mode which makes sure the group with same configuration always receives the same color.\n* You can shuffle the colors in case they aren’t pick to your liking\n* You can pick two different color palette for better distribution of the colors.\n\n  ![](https://miro.medium.com/max/1400/1*2pIoR-ZkaPsQ90UQh2W7Fg.webp \"Effective coloring of the groups is important!\")\n\n  ### Thanks to\n* [mahnerak](https://github.com/mahnerak), Lars, [Joe](https://github.com/jafioti) for detailed feedback — helped us immensely in this iteration.\n\n  ### Learn More\n\n  We have been working on Aim for the past 6 months and excited to see the overwhelming interest from the community.\n\n  Try out [Aim](https://aimstack.io/), join the [Aim community](https://slack.aimstack.io/), share your feedback.\n\n  We are building the next generation of democratized AI dev tools.\n\n  And don’t forget to leave [Aim](https://aimstack.io/) a star on GitHub for support 🙌.","html":"<p><a href=\"https://aimstack.io/\">Aim</a> 1.3.8 is now available. Thanks to the incredible Aim community for the feedback and support on building democratized open-source AI dev tools</p>\n<p>Check out the new features at <a href=\"http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjpmYWxzZSwiaW5kaWNhdG9yIjpmYWxzZSwieEFsaWdubWVudCI6InN0ZXAiLCJwb2ludHNDb3VudCI6NTB9fSwiZm9jdXNlZCI6eyJjaXJjbGUiOnsiYWN0aXZlIjp0cnVlLCJzdGVwIjoxNCwicnVuSGFzaCI6IjRiY2Y4ZDUyLWZjYTgtMTFlYS05MDJiLTBhMTk1NDdlYmIyZSIsIm1ldHJpY05hbWUiOiJsb3NzIiwidHJhY2VDb250ZXh0IjoiZXlKemRXSnpaWFFpT2lKMFpYTjBJbjAifX19LCJzZWFyY2giOnsicXVlcnkiOiJsb3NzLCBibGV1IGlmIGhwYXJhbXMubGVhcm5pbmdfcmF0ZSAhPSAwLjAwMDAxIGFuZCBjb250ZXh0LnN1YnNldCA9PSB0ZXN0IiwidiI6MX0sImNvbnRleHRGaWx0ZXIiOnsiZ3JvdXBCeUNvbG9yIjpbInBhcmFtcy5kYXRhc2V0LnByZXByb2MiXSwiZ3JvdXBCeVN0eWxlIjpbXSwiZ3JvdXBCeUNoYXJ0IjpbIm1ldHJpYyJdLCJhZ2dyZWdhdGVkIjpmYWxzZSwic2VlZCI6eyJjb2xvciI6MTAsInN0eWxlIjoxMH0sInBlcnNpc3QiOnsiY29sb3IiOmZhbHNlLCJzdHlsZSI6ZmFsc2V9fX0=\">play.aimstack.io</a>.</p>\n<p>Here are the more notable changes:</p>\n<h3>Enhanced Context Table</h3>\n<p>The context table used to not use the screen real-estate effectively — an empty line per grouping, non-efficient column management (imagine you have 200 columns to deal with).</p>\n<p>So we have made 3 changes to tackle this problem</p>\n<h3>New table groups view</h3>\n<p>Below is the new modified look of the table. Here is what’s changed:</p>\n<ul>\n<li>The empty per group is removed</li>\n<li>In addition to the group details popover, there is an in-place list group config is available for instant lookup</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/1400/1*l27Xjb6pYIMdEkABLkRBRA.webp\" alt=\"\" title=\"New improved Aim Context Table on Explore\"></p>\n<ul>\n<li><strong>[In Progress for next release]</strong> Column resize — this will allow to manage the wide columns and free much-needed screen real-estate for the data that matters.</li>\n</ul>\n<h3>Column Management</h3>\n<p>This feature allows to seamlessly pin the important columns to both sides of the table and hide the useless columns in between.</p>\n<p>You can also re-order the columns by dragging the mid-section up/down.</p>\n<p>This is super-handy when dealing with 100s of columns on the table for parameters.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*71RL39uLxxr3vnxMhn1uKg.webp\" alt=\"\" title=\"Drag columns left and right to pin, search and disable less important ones\"></p>\n<h3>Advanced Group Coloring</h3>\n<p>This is the latest iteration over the group coloring.</p>\n<ul>\n<li>\n<p>Now Aim enables persistent coloring mode which makes sure the group with same configuration always receives the same color.</p>\n</li>\n<li>\n<p>You can shuffle the colors in case they aren’t pick to your liking</p>\n</li>\n<li>\n<p>You can pick two different color palette for better distribution of the colors.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*2pIoR-ZkaPsQ90UQh2W7Fg.webp\" alt=\"\" title=\"Effective coloring of the groups is important!\"></p>\n<h3>Thanks to</h3>\n</li>\n<li>\n<p><a href=\"https://github.com/mahnerak\">mahnerak</a>, Lars, <a href=\"https://github.com/jafioti\">Joe</a> for detailed feedback — helped us immensely in this iteration.</p>\n<h3>Learn More</h3>\n<p>We have been working on Aim for the past 6 months and excited to see the overwhelming interest from the community.</p>\n<p>Try out <a href=\"https://aimstack.io/\">Aim</a>, join the <a href=\"https://slack.aimstack.io/\">Aim community</a>, share your feedback.</p>\n<p>We are building the next generation of democratized AI dev tools.</p>\n<p>And don’t forget to leave <a href=\"https://aimstack.io/\">Aim</a> a star on GitHub for support 🙌.</p>\n</li>\n</ul>"},"_id":"aim-1-3-8-—-enhanced-context-table-and-advanced-group-coloring.md","_raw":{"sourceFilePath":"aim-1-3-8-—-enhanced-context-table-and-advanced-group-coloring.md","sourceFileName":"aim-1-3-8-—-enhanced-context-table-and-advanced-group-coloring.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-1-3-8-—-enhanced-context-table-and-advanced-group-coloring"},"type":"Post"},{"title":"Aim 2.4.0 is out! XGBoost integration, Confidence interval aggregation and lots of UI performance improvements!","date":"2021-05-18T13:58:29.035Z","author":"Gev Soghomonian","description":"Aim 2.4.0 is out! XGBoost integration, Confidence interval aggregation and lots of UI performance improvements!","slug":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements","image":"https://aimstack.io/wp-content/uploads/2022/02/xgboost.png","draft":false,"categories":["New Releases"],"body":{"raw":"[Aim](https://github.com/aimhubio/aim) 2.4.0 featuring XGBoost Integration is out ! Thanks to the community for feedback and support on our journey towards democratizing MLOps tools.\n\nCheck out the updated Aim at [play.aimstack.io](http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==).\n\nFor this release, there have been lots of performance updates and small tweaks to the UI. Above all, this post highlights the two features of Aim 2.4.0. Please see the full list of changes [here](https://github.com/aimhubio/aim/milestone/6?closed=1).\n\n## XGBoost Inegration\n\n\n\nTo begin with,  `aim.callback` is now available that exports `AimCallback` to be passed to the `xgb.train` as a callback to log the experiments.\n\nCheck out this [blogpost](https://aimstack.io/blog/tutorials/an-end-to-end-example-of-aim-logger-used-with-xgboost-library/) for additional details on how to integrate Aim to your XGBoost code.\n\n## Confidence Interval as the aggregation method\n\n![](https://aimstack.io/wp-content/uploads/2022/02/confidence_interval.png)\n\nNow you can use confidence intervals for aggregation. The community has been requesting this feature, since it completes the list of necessary aggregation methods. As a result, if you have outlier metrics in your group, confidence interval will show logical aggregation and get better comparison of the groups. \n\n## Learn More\n\n\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nCheck out the latest [Aim integration](https://aimstack.io/aim-v2-2-0-hugging-face-integration/)!\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> 2.4.0 featuring XGBoost Integration is out ! Thanks to the community for feedback and support on our journey towards democratizing MLOps tools.</p>\n<p>Check out the updated Aim at <a href=\"http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==\">play.aimstack.io</a>.</p>\n<p>For this release, there have been lots of performance updates and small tweaks to the UI. Above all, this post highlights the two features of Aim 2.4.0. Please see the full list of changes <a href=\"https://github.com/aimhubio/aim/milestone/6?closed=1\">here</a>.</p>\n<h2>XGBoost Inegration</h2>\n<p>To begin with,  <code>aim.callback</code> is now available that exports <code>AimCallback</code> to be passed to the <code>xgb.train</code> as a callback to log the experiments.</p>\n<p>Check out this <a href=\"https://aimstack.io/blog/tutorials/an-end-to-end-example-of-aim-logger-used-with-xgboost-library/\">blogpost</a> for additional details on how to integrate Aim to your XGBoost code.</p>\n<h2>Confidence Interval as the aggregation method</h2>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/confidence_interval.png\" alt=\"\"></p>\n<p>Now you can use confidence intervals for aggregation. The community has been requesting this feature, since it completes the list of necessary aggregation methods. As a result, if you have outlier metrics in your group, confidence interval will show logical aggregation and get better comparison of the groups. </p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Check out the latest <a href=\"https://aimstack.io/aim-v2-2-0-hugging-face-integration/\">Aim integration</a>!</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","_raw":{"sourceFilePath":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","sourceFileName":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-2-4-0-is-out-xgboost-integration-confidence-interval-aggregation-and-lots-of-ui-performance-improvements"},"type":"Post"},{"title":"Aim 3.1 — Images Tracker and Images Explorer","date":"2021-11-25T14:57:05.232Z","author":"Gev Soghomonian","description":"Excited to share with you the Aim 3.1! 😊 A huge milestone on our journey towards democratizing AI dev tools. Thanks to the awesome Aim community","slug":"aim-3-1-—-images-tracker-and-images-explorer","image":"https://aimstack.io/wp-content/uploads/2021/08/aim-scaled.jpeg","draft":false,"categories":["New Releases"],"body":{"raw":"Excited to share with you the Aim 3.1! \n\nA huge milestone on our journey towards democratizing AI dev tools. Thanks to the awesome Aim community for testing this early and sharing issues, feedback.\n\nWe have added a new demo to showcase the new Explore Images feature. We have also forked the [lightweight-gan from lucidrains](https://github.com/lucidrains/lightweight-gan) and added the Aim integration.\n\nDemo code: <https://github.com/aimhubio/lightweight-gan>\\\nDemo site: [play.aimstack.io:10002](http://play.aimstack.io:10002/images?grouping=fkjeugYpZXU3Qy6AUQLGWaYfh7MDvRvP3eTRyMMzRUsZhgqFHwn98jPLEyjZEG4Vxj4XGRnBpUZJoD1XJ6vS7mw7twViU5iQ7AD1GqnqrTZTToPUkfrq&select=2qYYRs1i7GzkG9QbRNTbd8ZwMcueRtLqTWPLqhUQ9L4eeRJgEVkmbjfhnh9n2iZACZFGDuLzqGWHq53o4QQcp9wxb9oJnqhPZPp6bmro8UFDikUqmemyHqTP5q7dyaNPSxhuX7TrLQcsKKbDVKX4gXeJa8q95cTNa6Z9PrNSupd5teqBqStbnAuDzEzSfCjTqzG39A5VzoHGYxWjhc242HSowezeq7wHTSqMz8FbKfrBpWgtsbcdvmJKefZQm4eiMLw6zhwcSCJ1LnqKtJ4VpVtG1mu8NBukKAXVUoCDfprjdTF8my4Z8avf4VG4LCVZTCfL6aKT3FH6rThUDCdtCufS97jkWnAwgP36BjYq4vTMCmJbUcKfUnwGmfDEnGKe7ESSNyC6at6YG2eHJZTqvYGzErTVoEFG7MrSUFzA5QqBvuGzw6bibP4WtjJrDqqQojHhMJ7379dsm3azQHCAjyPsJaNR1XSNAiCSPzCzQ6nuRqdqhqkMPsfzUxB7DTZM6fGFx78P4PCaJWw3537GhX7q4t6tUz5tc7jtc4zfMqeX8TapZ39amp1hxaNjDpjPPCgi7st5BPPtHZHS&images=C9LyLE4XToLCLCAZ2wfH7CYgUFiTvbGGA4eYrDP2ByUR1VMjkinEgCM6CChQcwzwrNpeYxTwam78SGQqMNgqQTVho6CWTVfzxoy8cPxH74shAmToyAGjPpfgMiGqx1jD5BbHP9ZY99kKwYMXwTLEpnyiGa63gaoEfwJ2j2SA9EPC17tTaUEeK5PViLNb4CLzJ7GHxA4Bua1XSVHoZxcyU4RK)\n\n**The notable changes in the Aim 3.1.0:**\n\n* Images tracker and explorer\n* Runs navigation from the single run page\n* Performance improvements and tests\n\nThanks to srikanth, Mohamad Elgaar, Mahnerak, Andrew Xu and Bo yu for testing, raising issues and overall support.\n\n## Images Tracker and Explorer\n\nFinally we are shipping the highly requested feature for images tracking. Now you can track images during training and evaluation to explore them on the Aim UI.\n\nAll the regular grouping and search goodies are available on Images Explorer too \n\nAdd an image tracker in your training code like this:\n\n```\nrun.track(Image(tensor_or_pil, caption), name='gen', step=step, context={ \"subset\": \"train\" })\n```\n\nOnce you run your training, the images will be saved and become available on the Images Explorer tab.\n\nOn Images Explorer you can filter and group by the images all the params available (just like you would do for metrics). As a result, you get lots of flexibility to compare the runs via tracked images.\n\nHere is a quick promo video of what it can do. The rest of the details can be found in the docs[ here](https://aimstack.readthedocs.io/en/latest/ui/pages/explorers.html).\n\n![](https://aimstack.io/wp-content/uploads/2021/08/1_3IkmtAOLGy-e3eJneuv2bA.png)\n\nA quick demo video.\n\n<https://www.youtube.com/watch?v=4mtUFV8yG_o&feature=youtu.be>\n\nThe Images view on the single run page is coming soon …\n\n## Runs Navigation\n\nOne of the regressions from the Aim 2.x to [3.0.0](https://aimstack.io/aim-foundations-why-we-re-building-a-tensorboard-alternative/) was the ability to navigate between the runs of the same experiment from the single run page.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/111.png)\n\nWe have added that back as the top-most dropdown with the list of all experiments and their corresponding runs for easy navigation.\n\nSorry for the regression \n\n## Performance improvements and assurances\n\nTwo groups of performance improvements have been made— on the UI and on the SDK side.\n\n### **Column virtualization on Aim UI Table**\n\nThe ability to smoothly navigate through metrics and be able to interact with a table is surely the ultimate experience we aim to provide.\n\nWe are really proud of our craft and aim to make the best possible usage experience for the experiment comparison problem — and this is a key step towards it. \n\n### **Storage performance tests**\n\nOne of the unique challenges in building Aim is to make sure each newly added data type won’t impact the overall performance. We have added continuously add more performance tests to ensure the new releases don’t impact the performance.\n\nIn the past few weeks we learned that users like to record LOTS (up to millions) of steps for their metrics which opened up room for performance improvements of Aim, haha.\n\nPerformance reliability is key for Aim and this is a major iteration towards that!\n\n## Learn more\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p>Excited to share with you the Aim 3.1! </p>\n<p>A huge milestone on our journey towards democratizing AI dev tools. Thanks to the awesome Aim community for testing this early and sharing issues, feedback.</p>\n<p>We have added a new demo to showcase the new Explore Images feature. We have also forked the <a href=\"https://github.com/lucidrains/lightweight-gan\">lightweight-gan from lucidrains</a> and added the Aim integration.</p>\n<p>Demo code: <a href=\"https://github.com/aimhubio/lightweight-gan\">https://github.com/aimhubio/lightweight-gan</a><br>\nDemo site: <a href=\"http://play.aimstack.io:10002/images?grouping=fkjeugYpZXU3Qy6AUQLGWaYfh7MDvRvP3eTRyMMzRUsZhgqFHwn98jPLEyjZEG4Vxj4XGRnBpUZJoD1XJ6vS7mw7twViU5iQ7AD1GqnqrTZTToPUkfrq&#x26;select=2qYYRs1i7GzkG9QbRNTbd8ZwMcueRtLqTWPLqhUQ9L4eeRJgEVkmbjfhnh9n2iZACZFGDuLzqGWHq53o4QQcp9wxb9oJnqhPZPp6bmro8UFDikUqmemyHqTP5q7dyaNPSxhuX7TrLQcsKKbDVKX4gXeJa8q95cTNa6Z9PrNSupd5teqBqStbnAuDzEzSfCjTqzG39A5VzoHGYxWjhc242HSowezeq7wHTSqMz8FbKfrBpWgtsbcdvmJKefZQm4eiMLw6zhwcSCJ1LnqKtJ4VpVtG1mu8NBukKAXVUoCDfprjdTF8my4Z8avf4VG4LCVZTCfL6aKT3FH6rThUDCdtCufS97jkWnAwgP36BjYq4vTMCmJbUcKfUnwGmfDEnGKe7ESSNyC6at6YG2eHJZTqvYGzErTVoEFG7MrSUFzA5QqBvuGzw6bibP4WtjJrDqqQojHhMJ7379dsm3azQHCAjyPsJaNR1XSNAiCSPzCzQ6nuRqdqhqkMPsfzUxB7DTZM6fGFx78P4PCaJWw3537GhX7q4t6tUz5tc7jtc4zfMqeX8TapZ39amp1hxaNjDpjPPCgi7st5BPPtHZHS&#x26;images=C9LyLE4XToLCLCAZ2wfH7CYgUFiTvbGGA4eYrDP2ByUR1VMjkinEgCM6CChQcwzwrNpeYxTwam78SGQqMNgqQTVho6CWTVfzxoy8cPxH74shAmToyAGjPpfgMiGqx1jD5BbHP9ZY99kKwYMXwTLEpnyiGa63gaoEfwJ2j2SA9EPC17tTaUEeK5PViLNb4CLzJ7GHxA4Bua1XSVHoZxcyU4RK\">play.aimstack.io:10002</a></p>\n<p><strong>The notable changes in the Aim 3.1.0:</strong></p>\n<ul>\n<li>Images tracker and explorer</li>\n<li>Runs navigation from the single run page</li>\n<li>Performance improvements and tests</li>\n</ul>\n<p>Thanks to srikanth, Mohamad Elgaar, Mahnerak, Andrew Xu and Bo yu for testing, raising issues and overall support.</p>\n<h2>Images Tracker and Explorer</h2>\n<p>Finally we are shipping the highly requested feature for images tracking. Now you can track images during training and evaluation to explore them on the Aim UI.</p>\n<p>All the regular grouping and search goodies are available on Images Explorer too </p>\n<p>Add an image tracker in your training code like this:</p>\n<pre><code>run.track(Image(tensor_or_pil, caption), name='gen', step=step, context={ \"subset\": \"train\" })\n</code></pre>\n<p>Once you run your training, the images will be saved and become available on the Images Explorer tab.</p>\n<p>On Images Explorer you can filter and group by the images all the params available (just like you would do for metrics). As a result, you get lots of flexibility to compare the runs via tracked images.</p>\n<p>Here is a quick promo video of what it can do. The rest of the details can be found in the docs<a href=\"https://aimstack.readthedocs.io/en/latest/ui/pages/explorers.html\"> here</a>.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/1_3IkmtAOLGy-e3eJneuv2bA.png\" alt=\"\"></p>\n<p>A quick demo video.</p>\n<p><a href=\"https://www.youtube.com/watch?v=4mtUFV8yG_o&#x26;feature=youtu.be\">https://www.youtube.com/watch?v=4mtUFV8yG_o&#x26;feature=youtu.be</a></p>\n<p>The Images view on the single run page is coming soon …</p>\n<h2>Runs Navigation</h2>\n<p>One of the regressions from the Aim 2.x to <a href=\"https://aimstack.io/aim-foundations-why-we-re-building-a-tensorboard-alternative/\">3.0.0</a> was the ability to navigate between the runs of the same experiment from the single run page.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/111.png\" alt=\"\"></p>\n<p>We have added that back as the top-most dropdown with the list of all experiments and their corresponding runs for easy navigation.</p>\n<p>Sorry for the regression </p>\n<h2>Performance improvements and assurances</h2>\n<p>Two groups of performance improvements have been made— on the UI and on the SDK side.</p>\n<h3><strong>Column virtualization on Aim UI Table</strong></h3>\n<p>The ability to smoothly navigate through metrics and be able to interact with a table is surely the ultimate experience we aim to provide.</p>\n<p>We are really proud of our craft and aim to make the best possible usage experience for the experiment comparison problem — and this is a key step towards it. </p>\n<h3><strong>Storage performance tests</strong></h3>\n<p>One of the unique challenges in building Aim is to make sure each newly added data type won’t impact the overall performance. We have added continuously add more performance tests to ensure the new releases don’t impact the performance.</p>\n<p>In the past few weeks we learned that users like to record LOTS (up to millions) of steps for their metrics which opened up room for performance improvements of Aim, haha.</p>\n<p>Performance reliability is key for Aim and this is a major iteration towards that!</p>\n<h2>Learn more</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-3-1-—-images-tracker-and-images-explorer.md","_raw":{"sourceFilePath":"aim-3-1-—-images-tracker-and-images-explorer.md","sourceFileName":"aim-3-1-—-images-tracker-and-images-explorer.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-1-—-images-tracker-and-images-explorer"},"type":"Post"},{"title":"Aim 3.2 — Jupyter Notebook integration & Histograms","date":"2021-12-08T15:09:19.264Z","author":"Gev Soghomonian","description":"Aim 3.2 featuring Jupyter notebook integration is now available! 😊 We are on a mission to democratize AI dev tools. ","slug":"aim-3-2-—-jupyter-notebook-integration-histograms","image":"https://aimstack.io/wp-content/uploads/2021/08/3.2.0.png","draft":false,"categories":["New Releases"],"body":{"raw":"Aim 3.2 featuring Jupyter notebook integration is now available! \n\nWe are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for testing this early and sharing issues, feedback.\n\nWithin a week after the [v3.1](https://aimstack.io/aim3-1-images-tracker-and-images-explorer/) we are releasing the v3.2 with a number of key highly requested features in:\n\n* Aim Jupyter Notebook extension (Colab is coming soon…)\n* Histogram tracking and visualization\n* Full-size images, images resize and render modes\n* Search autofill and suggest on the UI\n\n## Aim & Jupyter notebook\n\n\n\nNow you can use Aim fully from your Jupyter notebook. We have built an Aim Jupyter notebook extension that comes along with the `aim` package.\n\nYou don’t need to install anything other than Aim. Here are the [docs](https://aimstack.readthedocs.io/en/latest/index.html).\\\nA quick demo of integrating Aim & Jupyter Notebook::\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1-3.gif \"It’s that easy to use Aim on your Jupyter notebook!\")\n\n## Histogram tracking and Visualization\n\nStarting from 3.2 you can track Distributions and visualize them as histograms on the run page.\n\nThis is how to track the weights distribution in your training code:\n\n```\nfrom aim import Distribution\n\nfor step in range(1000):\n    my_run.track(\n        Distribution(tensor), # Pass distribution\n        name='gradients', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'type': 'weights',\n        },\n    )\n```\n\nThe [demo](http://play.aimstack.io:10003/runs/426032ad2d7e4b0385bc6c51), [docs](https://aimstack.readthedocs.io/en/latest/index.html) and [examples](https://github.com/aimhubio/aim/blob/main/examples/pytorch_track.py) \n\nAnd this is how it looks on the UI. Aim lets you visualize the distributions every layer at every tracked step. Super powerful!\n\n![](https://aimstack.io/wp-content/uploads/2022/02/0.gif \"Visualize every layer and every tracked step.\")\n\n## Full-size images, images resize and render modes\n\n\n\nNow you can resize the tracked images size using the images resize tool available on the right hand tool-pain on the Images Explorer.\n\nHere is how it works:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/2.gif \"Easily resize the queried images\")\n\nWe have also enabled smooth and pixelated images render modes. Especially for sensitive type of images, this allows to see the detailed version of the image without any filter etc.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/3.gif \"Toggle between pixelated and smooth images render modes\")\n\nYou can also view full-size images by clicking on the top right corner magnifier on each images.\n\nBTW the smooth / pixelated config also translates to the full-size images.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/4.gif \"full-size images: easy!\")\n\n## Query Language autosuggest editor\n\nAnother highly requested feature.\n\nNow there is a QL autosuggest on all query inputs on the Aim UI. You will have all your tracked queryable metadata (params, run properties, contexts) at your hand at all times.\n\nHopefully this makes it much easier to get started with Aim.Here is a quick demo:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/5.gif)\n\n## Learn More\n\n[Aim is on a mission to democratize AI dev tools.](https://aimstack.readthedocs.io/en/latest/overview.html)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave Aim a star on GitHub for support.","html":"<p>Aim 3.2 featuring Jupyter notebook integration is now available! </p>\n<p>We are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for testing this early and sharing issues, feedback.</p>\n<p>Within a week after the <a href=\"https://aimstack.io/aim3-1-images-tracker-and-images-explorer/\">v3.1</a> we are releasing the v3.2 with a number of key highly requested features in:</p>\n<ul>\n<li>Aim Jupyter Notebook extension (Colab is coming soon…)</li>\n<li>Histogram tracking and visualization</li>\n<li>Full-size images, images resize and render modes</li>\n<li>Search autofill and suggest on the UI</li>\n</ul>\n<h2>Aim &#x26; Jupyter notebook</h2>\n<p>Now you can use Aim fully from your Jupyter notebook. We have built an Aim Jupyter notebook extension that comes along with the <code>aim</code> package.</p>\n<p>You don’t need to install anything other than Aim. Here are the <a href=\"https://aimstack.readthedocs.io/en/latest/index.html\">docs</a>.<br>\nA quick demo of integrating Aim &#x26; Jupyter Notebook::</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1-3.gif\" alt=\"\" title=\"It’s that easy to use Aim on your Jupyter notebook!\"></p>\n<h2>Histogram tracking and Visualization</h2>\n<p>Starting from 3.2 you can track Distributions and visualize them as histograms on the run page.</p>\n<p>This is how to track the weights distribution in your training code:</p>\n<pre><code>from aim import Distribution\n\nfor step in range(1000):\n    my_run.track(\n        Distribution(tensor), # Pass distribution\n        name='gradients', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'type': 'weights',\n        },\n    )\n</code></pre>\n<p>The <a href=\"http://play.aimstack.io:10003/runs/426032ad2d7e4b0385bc6c51\">demo</a>, <a href=\"https://aimstack.readthedocs.io/en/latest/index.html\">docs</a> and <a href=\"https://github.com/aimhubio/aim/blob/main/examples/pytorch_track.py\">examples</a> </p>\n<p>And this is how it looks on the UI. Aim lets you visualize the distributions every layer at every tracked step. Super powerful!</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/0.gif\" alt=\"\" title=\"Visualize every layer and every tracked step.\"></p>\n<h2>Full-size images, images resize and render modes</h2>\n<p>Now you can resize the tracked images size using the images resize tool available on the right hand tool-pain on the Images Explorer.</p>\n<p>Here is how it works:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/2.gif\" alt=\"\" title=\"Easily resize the queried images\"></p>\n<p>We have also enabled smooth and pixelated images render modes. Especially for sensitive type of images, this allows to see the detailed version of the image without any filter etc.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/3.gif\" alt=\"\" title=\"Toggle between pixelated and smooth images render modes\"></p>\n<p>You can also view full-size images by clicking on the top right corner magnifier on each images.</p>\n<p>BTW the smooth / pixelated config also translates to the full-size images.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/4.gif\" alt=\"\" title=\"full-size images: easy!\"></p>\n<h2>Query Language autosuggest editor</h2>\n<p>Another highly requested feature.</p>\n<p>Now there is a QL autosuggest on all query inputs on the Aim UI. You will have all your tracked queryable metadata (params, run properties, contexts) at your hand at all times.</p>\n<p>Hopefully this makes it much easier to get started with Aim.Here is a quick demo:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/5.gif\" alt=\"\"></p>\n<h2>Learn More</h2>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/overview.html\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave Aim a star on GitHub for support.</p>"},"_id":"aim-3-2-—-jupyter-notebook-integration-histograms.md","_raw":{"sourceFilePath":"aim-3-2-—-jupyter-notebook-integration-histograms.md","sourceFileName":"aim-3-2-—-jupyter-notebook-integration-histograms.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-2-—-jupyter-notebook-integration-histograms"},"type":"Post"},{"title":"Aim 3.3 — Audio & Text tracking, Plotly & Colab integrations","date":"2022-01-13T15:33:59.865Z","author":"Gev Soghomonian","description":"Hey community, Aim 3.3 is now available! 😊 We are on a mission to democratize AI dev tools.  ","slug":"aim-3-3-—-audio-text-tracking-plotly-colab-integrations","image":"https://aimstack.io/wp-content/uploads/2021/08/aim-3.3.png","draft":false,"categories":["New Releases"],"body":{"raw":"Hey community, Aim 3.3 is now available! 😊\n\nWe are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for helping test early versions and thanks for their contributions.\n\nAim 3.3 is full of highly requested features. Lots of items scratched from the public Aim [roadmap](https://github.com/aimhubio/aim#roadmap).\n\n* Audio tracking and exploration\n* Text tracking and visualization\n* Scatter plot explorer\n* Colab integration\n* Plotly integration\n* Images visualization on run details page\n\nNew Demo: [play.aimstack.io:10004](http://play.aimstack.io:10004/runs/d9e89aa7875e44b2ba85612a)\n\nDemo Code: [github.com/osoblanco/FastSpeech2](https://github.com/osoblanco/FastSpeech2/blob/master/train.py)\n\n\n\nSpecial thanks to Erik Arakelyan (osoblanco), Krystian Pavzkowski (krstp), Flaviu Vadan, SSamDav and AminSlk for their contributions and feedback.\n\n## Audio tracking and exploration\n\n\n\nNow you can track audio files with Aim during your speech-to-text or other audio-involving experiments.\n\nIt will allow you to track generated audio with context, query them, observe the evolution for audio-related experiments (e.g. speech-to-text). Both input, output and ground truth.\n\nJust like tracking the metrics, we have enabled a simple API to track the audio.\n\n```\nfrom aim import Audio\n\nfor step in range(1000):\n    my_run.track(\n        Audio(arr), # Pass audio file or numpy array\n        name='outputs', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n\n```\n\nHere is how it looks like on the UI.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1_LkeFigHPnQM1drADXJ3yZQ-1.gif)\n\n## **Text tracking and visualization**\n\nUse this to compare text inputs and outputs during training\n\nSimilarly, you can also track text with Aim during your NLP experiments.\n\nHere is how the code looks like:\n\n```\nfrom aim import Text\n\nfor step in range(1000):\n    my_run.track(\n        Text(string), # Pass a string you want to track\n        name='outputs', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n```\n\nThis is the end result on the UI.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1_nkqUz9DecxaMmJoCUe_8Rw.gif \"Training info tracked as a text\")\n\n## Colab integration\n\nAfter we have integrated [Aim to Jupyter](https://aimstack.io/blog/new-releases/aim-3-2-jupyter-notebook-integration-histograms/), there were many requests to enable Aim on Colab too. Now it has arrived! \n\nWith fully embedded Aim UI, now you can track and follow your experiments live without leaving your colab environment!\n\nHere is an example [colab to get started with](https://colab.research.google.com/drive/1vlXVEtsKCf1390-gAfDhrvLPC14PN3-r?usp=sharing).\n\n> Note: Please make sure to run all the cells to be able to use the UI as well\n\nSo this is how it looks on your browser:\n\n![](https://aimstack.io/wp-content/uploads/2021/08/Run-Aim.gif)\n\n## Plotly integration\n\n\n\nNow you can track your custom plotly charts and visualize them on Aim with full native plotly interactive capabilities baked in.\n\nThis is a great way to also track all your relevant plotly visualizations per step and have them rendered, navigated in Aim along with everything else already in there.\n\n```\nfrom aim import Figure\n\nfor step in range(1000):\n    my_run.track(\n        Figure(fig_obj), # Pass any plotly figure\n        name='plotly_bars', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n```\n\nThe end-result on the Aim Web UI.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1_8xn3PH_Hzk6fotyZQqy-AQ.gif)\n\n## Images visualization on run details page\n\nAs we had launched the images tracking and visualization in[ 3.1](https://aimstack.io/aim3-1-images-tracker-and-images-explorer/), we haven’t enabled the images on the single run page. Besides the explorer, now you can observe and search through the images on the single run page as well.\n\nHere is how it looks on the UI\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1_jnUogPgbzwX6GOmDaXHKMg.gif)\n\n## Learn More\n\n\n\n[Aim is on a mission to democratize AI dev tools.](https://aimstack.readthedocs.io/en/latest/overview.html)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features and bugs.\n\nAnd don’t forget to leave Aim a star on GitHub for support.","html":"<p>Hey community, Aim 3.3 is now available! 😊</p>\n<p>We are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for helping test early versions and thanks for their contributions.</p>\n<p>Aim 3.3 is full of highly requested features. Lots of items scratched from the public Aim <a href=\"https://github.com/aimhubio/aim#roadmap\">roadmap</a>.</p>\n<ul>\n<li>Audio tracking and exploration</li>\n<li>Text tracking and visualization</li>\n<li>Scatter plot explorer</li>\n<li>Colab integration</li>\n<li>Plotly integration</li>\n<li>Images visualization on run details page</li>\n</ul>\n<p>New Demo: <a href=\"http://play.aimstack.io:10004/runs/d9e89aa7875e44b2ba85612a\">play.aimstack.io:10004</a></p>\n<p>Demo Code: <a href=\"https://github.com/osoblanco/FastSpeech2/blob/master/train.py\">github.com/osoblanco/FastSpeech2</a></p>\n<p>Special thanks to Erik Arakelyan (osoblanco), Krystian Pavzkowski (krstp), Flaviu Vadan, SSamDav and AminSlk for their contributions and feedback.</p>\n<h2>Audio tracking and exploration</h2>\n<p>Now you can track audio files with Aim during your speech-to-text or other audio-involving experiments.</p>\n<p>It will allow you to track generated audio with context, query them, observe the evolution for audio-related experiments (e.g. speech-to-text). Both input, output and ground truth.</p>\n<p>Just like tracking the metrics, we have enabled a simple API to track the audio.</p>\n<pre><code>from aim import Audio\n\nfor step in range(1000):\n    my_run.track(\n        Audio(arr), # Pass audio file or numpy array\n        name='outputs', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n\n</code></pre>\n<p>Here is how it looks like on the UI.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1_LkeFigHPnQM1drADXJ3yZQ-1.gif\" alt=\"\"></p>\n<h2><strong>Text tracking and visualization</strong></h2>\n<p>Use this to compare text inputs and outputs during training</p>\n<p>Similarly, you can also track text with Aim during your NLP experiments.</p>\n<p>Here is how the code looks like:</p>\n<pre><code>from aim import Text\n\nfor step in range(1000):\n    my_run.track(\n        Text(string), # Pass a string you want to track\n        name='outputs', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n</code></pre>\n<p>This is the end result on the UI.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1_nkqUz9DecxaMmJoCUe_8Rw.gif\" alt=\"\" title=\"Training info tracked as a text\"></p>\n<h2>Colab integration</h2>\n<p>After we have integrated <a href=\"https://aimstack.io/blog/new-releases/aim-3-2-jupyter-notebook-integration-histograms/\">Aim to Jupyter</a>, there were many requests to enable Aim on Colab too. Now it has arrived! </p>\n<p>With fully embedded Aim UI, now you can track and follow your experiments live without leaving your colab environment!</p>\n<p>Here is an example <a href=\"https://colab.research.google.com/drive/1vlXVEtsKCf1390-gAfDhrvLPC14PN3-r?usp=sharing\">colab to get started with</a>.</p>\n<blockquote>\n<p>Note: Please make sure to run all the cells to be able to use the UI as well</p>\n</blockquote>\n<p>So this is how it looks on your browser:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/Run-Aim.gif\" alt=\"\"></p>\n<h2>Plotly integration</h2>\n<p>Now you can track your custom plotly charts and visualize them on Aim with full native plotly interactive capabilities baked in.</p>\n<p>This is a great way to also track all your relevant plotly visualizations per step and have them rendered, navigated in Aim along with everything else already in there.</p>\n<pre><code>from aim import Figure\n\nfor step in range(1000):\n    my_run.track(\n        Figure(fig_obj), # Pass any plotly figure\n        name='plotly_bars', # The name of distributions\n        step=step,   # Step index (optional)\n        epoch=0,     # Epoch (optional)\n        context={    # Context (optional)\n            'subset': 'train',\n        },\n    )\n</code></pre>\n<p>The end-result on the Aim Web UI.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1_8xn3PH_Hzk6fotyZQqy-AQ.gif\" alt=\"\"></p>\n<h2>Images visualization on run details page</h2>\n<p>As we had launched the images tracking and visualization in<a href=\"https://aimstack.io/aim3-1-images-tracker-and-images-explorer/\"> 3.1</a>, we haven’t enabled the images on the single run page. Besides the explorer, now you can observe and search through the images on the single run page as well.</p>\n<p>Here is how it looks on the UI</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1_jnUogPgbzwX6GOmDaXHKMg.gif\" alt=\"\"></p>\n<h2>Learn More</h2>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/overview.html\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features and bugs.</p>\n<p>And don’t forget to leave Aim a star on GitHub for support.</p>"},"_id":"aim-3-3-—-audio-text-tracking-plotly-colab-integrations.md","_raw":{"sourceFilePath":"aim-3-3-—-audio-text-tracking-plotly-colab-integrations.md","sourceFileName":"aim-3-3-—-audio-text-tracking-plotly-colab-integrations.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-3-—-audio-text-tracking-plotly-colab-integrations"},"type":"Post"},{"title":"Aim 3.4 – Remote Tracking Alpha, Sorting & deleting runs","date":"2022-01-24T16:06:51.383Z","author":"Gev Soghomonian","description":"Hey team, Aim 3.4  featuring remote-tracking is now available! 😊 Aim is an open source AI experiment tracking tool.","slug":"aim-3-4-–-remote-tracking-alpha-sorting-deleting-runs","image":"https://aimstack.io/wp-content/uploads/2021/08/1_F-Ubp6reeVEAahicQEz-SQ.png","draft":false,"categories":["New Releases"],"body":{"raw":"Hey team, Aim 3.4  featuring remote-tracking is now available! \n\nAim is an open source AI experiment tracking tool. We are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for the help and contributions.\n\nThis is a milestone release with lots of anticipated new features and one that’s super-anticipated (remote-tracking!). Brace yourselves, the collaborative Aim is here one commit at a time!!!\n\n## Here is what’s new:\n\n* Remote tracking \\[experimental]\n* Run delete and archive: batch and single\n* Ability to stack images on the [Images Explorer](https://aimstack.io/aim3-1-images-tracker-and-images-explorer/)\n* Text filtering via regexp\n* Trendline on scatterplots\n* More images features: display images by original size, align by width, images reordering\n\nSpecial thanks to Geoffrey Chen, gormat, sjakkampudi, osoblanco, Sennevs, gloryVine, krstp and others for continuous feedback and help.\n\n## Remote tracking \\[experimental]\n\nThis is a milestone release with lots of anticipated new features and one that’s super-anticipated. Brace yourselves, the collaborative Aim is here one commit at a time!!!\n\nAim Remote Tracking is very simple and easy to get started with \n\nHere are the steps to make it work. For more details pls check out [the end-to-end guide on Aim docs](https://aimstack.readthedocs.io/en/latest/using/remote_tracking.html).\n\n````\n### Ensure Aim version 3.4.x\n```sh\n$ pip install \"aim>=3.4.0\"\n```\n\n### Initialize the remote server\n```sh\n$ aim init # (optional)\n$ aim server --repo <REPO_PATH>\n```\nOutput:\n```\n> Server is mounted on 0.0.0.0:53800\n> Press Ctrl+C to exit\n```\n### Start the Aim UI\n```\n$ aim up --repo <REPO_PATH>\n```\n\n### Change only 1 line in your training code\nPoint your repo to the remote location\n```py\naim_run = Run(repo='aim://172.3.66.145:53800')# replace example IP with your tracking server IP/hostname\n```\n````\n\n## Run, delete and archive: Batch and single\n\n\n\nOne of the very highly anticipated features by the Aim community. Now you can archive or hard delete your premature, interrupted runs from all the explorer pages as well as Run Details Settings tab.\n\nIt’s really easy to use. just select the run and the `Delete` / `Archive` buttons will appear.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/1_2Qu9172RudbYfvFaVXVvNg.png)\n\n## Ability to stack images on the Images Explorer\n\n\n\nThis feature allows to not only view the tracked images sequentially, but also stack them by the last grouped param.\n\nOnce stacked, a slider appears that will allow you to navigate between the layers of stacked images. This feature will allow to closely observe the evolution of output images (GANs, wave outputs as img etc)\n\nHere is a quick demo [link](http://play.aimstack.io:10002/images?grouping=7sKkRob88jEDScwcb7RLVkxZMAGNj8QPqfbeDBN11Hau1HzW4sr7FGSESSWwWH7qPYX4NvhSCtkgWXMTkHXEixu6soDSnPEYZ6CCa5fqUhbpWZ17EGMYDCknV4JErUVLaxyDtt2VjKEVSgEfGdWghLKLL5euM3YAF34MwNEtRVJxuXGAreiKEtXYbwbMHrs5JJ5kZ&select=gTSaqzN7Mb8GdSizQfqNj9qCzd61EVTqUzAWmhAMFt1NVE2ABWM3PcYXbvEoHXrHBBwG51ytmWtG2AXtTVbUr8PVynYCpDzJqg4ZFEGauDS7PFw91DQ7nnxPzstQYFwbxWBQTR8x2eiUdScMgXh5XvkpPpn1HQpTbKz7ZgU1GXuezCrjcVXN9KGatx2S5iJAwNS4pLWpuE6HthgD9ww8sNzQzDBJuDHHHUSgkXDV2CoJqzAEE6RKf8gsdrWwP9GLovkHk43oMqPzwcmXCnUG4TFG7oL2HGaqXk2MSAN44RAMDbhwBH9nwV4KAyCHZD6kcrvdyBdadH92iPJMsW4cDQD26XaMsRxN3mWAqkvZPvAznnppWaVNFHv4V8q4kmemmoTNRi5jCD2r4b1ZgpuVN639cNsniPdQxPHm38bw56&images=JV4T9kjLib9QU1Y8yG9XzRSB2pQtueUv7vj8dnnFN5YWxuyyRLbSPPQ5MJEGfgzssBbWPsgdT3jMaGndWtj9uiqCnWqbzQ6ZUfK31hTgPKaDZXMWsyNnjjoTbSwU5E4Y2TVQ1m8yThVhtdQZ7Uf6zf1tpx7JgdXmeBdgzEFiYz63qFrj5wabvD6xvanu9X7giWsgPwB9aA4pMRNG4KuKSpDW5EaqVZzNoRxUPmMiL42kjrB7mEu9rKdbRxTcfDKv4ziN3fkJ2Euhq4YD2nmmsnsktJbjrLPyVjsrJfzeGALh6C37tW4C215en6yLhVp6kzh9EnHKLQwA3pgpnfDRi4NMgBmkQrHX4RMpZWWN9YKDUpKWc1bajxEU6wmzNiLD4FfVkT8Wt5uyQZe2mY81fiAgmh2nDHdP8MXAU77j569wpwcR2B68iHPqdCFQGyyyMN9YFt7u9hWvw1hca85Xmeo7gsKP5prhseh2QsFHjG3BgRMnaJRgn9hKktoFiXbxcwrdWr4CVYehuRTu48ixf1ivDx1uKDLTr1MTyDnVtZ55Hh7zkgEFKQXsXHesxUBJ9hyciPUYhsDU5NG4ib5PUw2g326JHMpnDcRpMLy464GdBj891zYaw1PvU2DAFchHjJHLiiDdEF5tfLSm4jkG7ARWF5yUisVarAaCkfYhcXkAL7Wfg7RGUnhfmkRyd7DXhskCDvjPAdt98gTZJGsTbSFFrpKXTSAiBqhbY9Z9a6n29wxsffGC4hntQZMCqFr1YAd16A6LBrfR4NTPLZoLySjqq3ZdirCxf2E8pTah2ty76vt17VpQA6DbRrFKDKJUTiGL7WskgMHpKT2d2Fd881ALiQKnRgtQTKh34JNaKi3UAF2ZvLg9hQVxaqCD5bNdhuFHtnKM926dt5v8dJLxxTsJzgeysaHNsnMvGv3Ej6r3AjVfdL7w2mjT8vDUJ7wp5JXrWp915NjDYYMXJMHJ67P3bnr2eLZtvrowfNZYe4DTvSoGmYgqVNeNiK3ErNR3npX6cv2hNDFWmooMShc61yHB4GC77n2UMf7pmjmQm5Y3M55cuFcYPAmwiRfvFmtd4Y53ADe6n8kFHAPrscSQ7hYWMDeoSQyNQESFUmQMNjR5HjrU5SVvTrMeVCiiyYTmzhAxiz3D6iV1HyTvkCREjPEUyvWNb9vMwBk32uFUmqzbEZn2XGQLCakqNrf4y3uV7EPiz6pTZSmiRUMWQm1U9HSoDRoqcEysgbr8FDeXgtYZ6tyvCtJFHibfydW2wvtpRwaWXtvjxfbpcxWtr73VC9Amk45mkKMdq5QKGZR5Da9S9wATBT4ipA18Xrmv7kSQSMeHD4QJRuQtLgrG77VmcmtybH9ofqQALQ5wFN24JV1f3Jo9QdwTNBdfe7rQ5X7CEfCb7RgEM29sA4bZjHND7Ppos9ygV2F17YCekfuKZwXzo9k6y94SYcPvh7BBiTMG3HEJvbfHQDUjSv3eR8zYfdts5gbQWrV8aUmocu8HxYBj4J814o6gC1CfLaRvrRYSF3d7xxBTimFdg5BNJ3Xx4vVfRgfiZxJxfYUpVMpXK8kXi2F6t9Zgu1Gt8xBbidPuHS2nqWbEjAVnEKp8a6h8b6rQZUzAWfsJfmNzZTdXvAnm15GfifuZwhAj5SPaYdB5VhQVBoZ2MXsjt6kVxYPdvqhhUDufaebSba9ytYeuoR9iezz4SyAL5zGYeKm9gayQPdzPeZd5e4NToj2hN16tM47FevssgF5nR2pGjXtDUkbKhAZjcThphgE7XAVKc244pDDWgnqjFdjjJe1byVDpS2sVExmanrrGueWdidKxHSzjwKgvrhP4egLEF5y7joDgVrUHVPoraBYaTWzcGRFs2jCjHvfCs22nGvznFgQ9tnFkedou71d6kfmXXudtgzWPCp22zDQ3EiMT5tPq8oRjpcJNoWdQ1xBe1ZFK2dxfwr1ZPW1r9mqaeunxUM251vG9DgxmT6Nm67VU5bNuVeV3Z97KfXQVaPcgw7BrKmJRNk6fFsCSBjTpae3Xu68DHKexwf1cc7JBgKh34XJo2PgsWRMRTs6rK4CGN92ZVen1kKGZoD1QK9QVjZghpKRimnuiibNN7ehZFjhBVNQ6x6Mc6YgjkH98QUtUPhAsT9pKA5WfP6UL3BtqvGvJRvZsPnZDnVkn6xqsvwaPAZDDAMjukw8h1KayDbpaPJQFRoM2GnLWVD2uE2xRRxginm15h5Sm9UT9avk6Dh5N7V8PV6iyWbSXwMDmUQqRHBbW1b2mGiYY84fniRnfPU8qPw6rfdGYYPBZeE5uqgHH8rDSfZ8ZaJKW7TU4R4woSgyVjvFAuTi1RPaoRDCRDUhKRncQy8DSe8gcHFGz8NsrHSy5To7PF7APQ4BE4zquXfmUzvos1CEQ3F1ZwMUFX2tNZNhRePQpQi8SdS2456UaZzRS3L3cmo9sZV3nH9y3zDuT1DGtih4K44Q5H5QiP793V5DBXxKmX6icM2Z9LKtm3CxEBa9tkDHcqN9Mvku2YTsQHA1V3iJooFpvnAyuXjNud4asecrumfCuLUjqDAKeLL9gWC7Mesv6u8hEy8Lob5vh2758KccuNbpuY3Siv3whk7Cdvp5rw2KPkxcVNQAU8xSqwxictcEsnPPawyjdBMFTEtJbsWhxP9HLpSMgkvpK1t3V4rFFvJKrg4oUZgEuVWPuZkj7v8UwhPGVxqQ6Xvhk6F2bovsx9KofwZQaYMYA8KHzED7KFAhkG3JKBcfoiXiwGx5JaYJsPc43u6eMPZzKSaQQksnUhXHPwZN2HivK9MAABiT5tPUZaedmnzmdZQL5jJ19yFVsccpGSxxPVtd3QE1Jz6bgWX6K3o9JnwymB7Xt2vziQvnntqxZNCtHYtPG1DjVq2GYYFoxT3KCEMFbfoinsApNSG3jNyNxXxeikciuFYqk8hNCAEGoYfNMFPmNkHUDMFYpBERxbGSmw1JtZGfJLPyWHk8puUeQ1S1G29aysDaDuD9dGGp89J2MxM4oXmek8eUQzA83AW45oY5Vh7vLctQNcjXpXBPt69rhJjRriE27MyToawf48jerCApZVjUW9Sy24hykpjMKv6ttsqWrECy6bRBwWnTgUh11jMn8fcwUxwMkJEe5dNf5UDPqJ17fg72pF6aCHM7bp5Mm5GTVrjgmiTwdf9F5jTk9evz3nXdgMRPmJFFYApKpE947UKRJyzT5MpQtwQGEDHT9VaTkhgmAPYFeuK2Uznz7trJ1QtewkxJ3Sth72M7i9JPDEBnnmjaxsZ4FADBRsz4RBLntJndpWCvYJgxD96LxSwGFpb3FRooTvtG1Z8pRfHHjcowUr2vFaSpRyPhV6) to try out. Here is a glimpse of the UI:\n\n![](https://aimstack.io/wp-content/uploads/2021/08/1_hdJPM1ggTMtdcri1htvZdg.png)\n\n## Text Search\n\nNow a comprehensive text searching is available to be able to outline the desired text. Regular Expressions are available among others.\n\nHere is a link for a quick [demo](http://play.aimstack.io:10004/runs/d9e89aa7875e44b2ba85612a/texts). And a glimpse of the UI:\n\n![](https://aimstack.io/wp-content/uploads/2021/08/1_pt8sjFzpbhomdqRDwKb-Mw.png)\n\n## Trendline on scatterplots\n\n\n\nNow you can render a trendline over your scatterplots on Scatters Explorer. We have enabled linear and Loess trendline.\n\nThanks to [sjakkampudi](https://github.com/aimhubio/aim/issues/1160) for the help on this one.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/2.png)\n\n## More Images Features\n\nWe have added a number of new tools to the Images Explorer\n\n## Display Images by original size\n\nNow you can view & compare the tracked images by their original size. This has been a key missing ingredient for effective images comparison.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/original-size.png)\n\n## Align by width\n\n\n\nYou can also align images by their width. This is especially handy when long images are tracked, such as sound spectograms (40px / 1000px). This feature will allow to effectively compare such images.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/width.png)\n\n## Images Sorting\n\nYou can also apply sorting of images by any tracked available parameter. In this case I have enabled sorting by step in descending order to see the later generated images in my GAN experiments. A lot smoother than the ones above.\n\n![](https://aimstack.io/wp-content/uploads/2021/08/sorting.png)\n\n## Learn more\n\n[Aim is on a mission to democratize AI dev tools.](https://aimstack.readthedocs.io/en/latest/overview.html)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave Aim a star on GitHub for support.","html":"<p>Hey team, Aim 3.4  featuring remote-tracking is now available! </p>\n<p>Aim is an open source AI experiment tracking tool. We are on a mission to democratize AI dev tools. Thanks to the awesome Aim community for the help and contributions.</p>\n<p>This is a milestone release with lots of anticipated new features and one that’s super-anticipated (remote-tracking!). Brace yourselves, the collaborative Aim is here one commit at a time!!!</p>\n<h2>Here is what’s new:</h2>\n<ul>\n<li>Remote tracking [experimental]</li>\n<li>Run delete and archive: batch and single</li>\n<li>Ability to stack images on the <a href=\"https://aimstack.io/aim3-1-images-tracker-and-images-explorer/\">Images Explorer</a></li>\n<li>Text filtering via regexp</li>\n<li>Trendline on scatterplots</li>\n<li>More images features: display images by original size, align by width, images reordering</li>\n</ul>\n<p>Special thanks to Geoffrey Chen, gormat, sjakkampudi, osoblanco, Sennevs, gloryVine, krstp and others for continuous feedback and help.</p>\n<h2>Remote tracking [experimental]</h2>\n<p>This is a milestone release with lots of anticipated new features and one that’s super-anticipated. Brace yourselves, the collaborative Aim is here one commit at a time!!!</p>\n<p>Aim Remote Tracking is very simple and easy to get started with </p>\n<p>Here are the steps to make it work. For more details pls check out <a href=\"https://aimstack.readthedocs.io/en/latest/using/remote_tracking.html\">the end-to-end guide on Aim docs</a>.</p>\n<pre><code>### Ensure Aim version 3.4.x\n```sh\n$ pip install \"aim>=3.4.0\"\n```\n\n### Initialize the remote server\n```sh\n$ aim init # (optional)\n$ aim server --repo &#x3C;REPO_PATH>\n```\nOutput:\n```\n> Server is mounted on 0.0.0.0:53800\n> Press Ctrl+C to exit\n```\n### Start the Aim UI\n```\n$ aim up --repo &#x3C;REPO_PATH>\n```\n\n### Change only 1 line in your training code\nPoint your repo to the remote location\n```py\naim_run = Run(repo='aim://172.3.66.145:53800')# replace example IP with your tracking server IP/hostname\n```\n</code></pre>\n<h2>Run, delete and archive: Batch and single</h2>\n<p>One of the very highly anticipated features by the Aim community. Now you can archive or hard delete your premature, interrupted runs from all the explorer pages as well as Run Details Settings tab.</p>\n<p>It’s really easy to use. just select the run and the <code>Delete</code> / <code>Archive</code> buttons will appear.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/1_2Qu9172RudbYfvFaVXVvNg.png\" alt=\"\"></p>\n<h2>Ability to stack images on the Images Explorer</h2>\n<p>This feature allows to not only view the tracked images sequentially, but also stack them by the last grouped param.</p>\n<p>Once stacked, a slider appears that will allow you to navigate between the layers of stacked images. This feature will allow to closely observe the evolution of output images (GANs, wave outputs as img etc)</p>\n<p>Here is a quick demo <a href=\"http://play.aimstack.io:10002/images?grouping=7sKkRob88jEDScwcb7RLVkxZMAGNj8QPqfbeDBN11Hau1HzW4sr7FGSESSWwWH7qPYX4NvhSCtkgWXMTkHXEixu6soDSnPEYZ6CCa5fqUhbpWZ17EGMYDCknV4JErUVLaxyDtt2VjKEVSgEfGdWghLKLL5euM3YAF34MwNEtRVJxuXGAreiKEtXYbwbMHrs5JJ5kZ&#x26;select=gTSaqzN7Mb8GdSizQfqNj9qCzd61EVTqUzAWmhAMFt1NVE2ABWM3PcYXbvEoHXrHBBwG51ytmWtG2AXtTVbUr8PVynYCpDzJqg4ZFEGauDS7PFw91DQ7nnxPzstQYFwbxWBQTR8x2eiUdScMgXh5XvkpPpn1HQpTbKz7ZgU1GXuezCrjcVXN9KGatx2S5iJAwNS4pLWpuE6HthgD9ww8sNzQzDBJuDHHHUSgkXDV2CoJqzAEE6RKf8gsdrWwP9GLovkHk43oMqPzwcmXCnUG4TFG7oL2HGaqXk2MSAN44RAMDbhwBH9nwV4KAyCHZD6kcrvdyBdadH92iPJMsW4cDQD26XaMsRxN3mWAqkvZPvAznnppWaVNFHv4V8q4kmemmoTNRi5jCD2r4b1ZgpuVN639cNsniPdQxPHm38bw56&#x26;images=JV4T9kjLib9QU1Y8yG9XzRSB2pQtueUv7vj8dnnFN5YWxuyyRLbSPPQ5MJEGfgzssBbWPsgdT3jMaGndWtj9uiqCnWqbzQ6ZUfK31hTgPKaDZXMWsyNnjjoTbSwU5E4Y2TVQ1m8yThVhtdQZ7Uf6zf1tpx7JgdXmeBdgzEFiYz63qFrj5wabvD6xvanu9X7giWsgPwB9aA4pMRNG4KuKSpDW5EaqVZzNoRxUPmMiL42kjrB7mEu9rKdbRxTcfDKv4ziN3fkJ2Euhq4YD2nmmsnsktJbjrLPyVjsrJfzeGALh6C37tW4C215en6yLhVp6kzh9EnHKLQwA3pgpnfDRi4NMgBmkQrHX4RMpZWWN9YKDUpKWc1bajxEU6wmzNiLD4FfVkT8Wt5uyQZe2mY81fiAgmh2nDHdP8MXAU77j569wpwcR2B68iHPqdCFQGyyyMN9YFt7u9hWvw1hca85Xmeo7gsKP5prhseh2QsFHjG3BgRMnaJRgn9hKktoFiXbxcwrdWr4CVYehuRTu48ixf1ivDx1uKDLTr1MTyDnVtZ55Hh7zkgEFKQXsXHesxUBJ9hyciPUYhsDU5NG4ib5PUw2g326JHMpnDcRpMLy464GdBj891zYaw1PvU2DAFchHjJHLiiDdEF5tfLSm4jkG7ARWF5yUisVarAaCkfYhcXkAL7Wfg7RGUnhfmkRyd7DXhskCDvjPAdt98gTZJGsTbSFFrpKXTSAiBqhbY9Z9a6n29wxsffGC4hntQZMCqFr1YAd16A6LBrfR4NTPLZoLySjqq3ZdirCxf2E8pTah2ty76vt17VpQA6DbRrFKDKJUTiGL7WskgMHpKT2d2Fd881ALiQKnRgtQTKh34JNaKi3UAF2ZvLg9hQVxaqCD5bNdhuFHtnKM926dt5v8dJLxxTsJzgeysaHNsnMvGv3Ej6r3AjVfdL7w2mjT8vDUJ7wp5JXrWp915NjDYYMXJMHJ67P3bnr2eLZtvrowfNZYe4DTvSoGmYgqVNeNiK3ErNR3npX6cv2hNDFWmooMShc61yHB4GC77n2UMf7pmjmQm5Y3M55cuFcYPAmwiRfvFmtd4Y53ADe6n8kFHAPrscSQ7hYWMDeoSQyNQESFUmQMNjR5HjrU5SVvTrMeVCiiyYTmzhAxiz3D6iV1HyTvkCREjPEUyvWNb9vMwBk32uFUmqzbEZn2XGQLCakqNrf4y3uV7EPiz6pTZSmiRUMWQm1U9HSoDRoqcEysgbr8FDeXgtYZ6tyvCtJFHibfydW2wvtpRwaWXtvjxfbpcxWtr73VC9Amk45mkKMdq5QKGZR5Da9S9wATBT4ipA18Xrmv7kSQSMeHD4QJRuQtLgrG77VmcmtybH9ofqQALQ5wFN24JV1f3Jo9QdwTNBdfe7rQ5X7CEfCb7RgEM29sA4bZjHND7Ppos9ygV2F17YCekfuKZwXzo9k6y94SYcPvh7BBiTMG3HEJvbfHQDUjSv3eR8zYfdts5gbQWrV8aUmocu8HxYBj4J814o6gC1CfLaRvrRYSF3d7xxBTimFdg5BNJ3Xx4vVfRgfiZxJxfYUpVMpXK8kXi2F6t9Zgu1Gt8xBbidPuHS2nqWbEjAVnEKp8a6h8b6rQZUzAWfsJfmNzZTdXvAnm15GfifuZwhAj5SPaYdB5VhQVBoZ2MXsjt6kVxYPdvqhhUDufaebSba9ytYeuoR9iezz4SyAL5zGYeKm9gayQPdzPeZd5e4NToj2hN16tM47FevssgF5nR2pGjXtDUkbKhAZjcThphgE7XAVKc244pDDWgnqjFdjjJe1byVDpS2sVExmanrrGueWdidKxHSzjwKgvrhP4egLEF5y7joDgVrUHVPoraBYaTWzcGRFs2jCjHvfCs22nGvznFgQ9tnFkedou71d6kfmXXudtgzWPCp22zDQ3EiMT5tPq8oRjpcJNoWdQ1xBe1ZFK2dxfwr1ZPW1r9mqaeunxUM251vG9DgxmT6Nm67VU5bNuVeV3Z97KfXQVaPcgw7BrKmJRNk6fFsCSBjTpae3Xu68DHKexwf1cc7JBgKh34XJo2PgsWRMRTs6rK4CGN92ZVen1kKGZoD1QK9QVjZghpKRimnuiibNN7ehZFjhBVNQ6x6Mc6YgjkH98QUtUPhAsT9pKA5WfP6UL3BtqvGvJRvZsPnZDnVkn6xqsvwaPAZDDAMjukw8h1KayDbpaPJQFRoM2GnLWVD2uE2xRRxginm15h5Sm9UT9avk6Dh5N7V8PV6iyWbSXwMDmUQqRHBbW1b2mGiYY84fniRnfPU8qPw6rfdGYYPBZeE5uqgHH8rDSfZ8ZaJKW7TU4R4woSgyVjvFAuTi1RPaoRDCRDUhKRncQy8DSe8gcHFGz8NsrHSy5To7PF7APQ4BE4zquXfmUzvos1CEQ3F1ZwMUFX2tNZNhRePQpQi8SdS2456UaZzRS3L3cmo9sZV3nH9y3zDuT1DGtih4K44Q5H5QiP793V5DBXxKmX6icM2Z9LKtm3CxEBa9tkDHcqN9Mvku2YTsQHA1V3iJooFpvnAyuXjNud4asecrumfCuLUjqDAKeLL9gWC7Mesv6u8hEy8Lob5vh2758KccuNbpuY3Siv3whk7Cdvp5rw2KPkxcVNQAU8xSqwxictcEsnPPawyjdBMFTEtJbsWhxP9HLpSMgkvpK1t3V4rFFvJKrg4oUZgEuVWPuZkj7v8UwhPGVxqQ6Xvhk6F2bovsx9KofwZQaYMYA8KHzED7KFAhkG3JKBcfoiXiwGx5JaYJsPc43u6eMPZzKSaQQksnUhXHPwZN2HivK9MAABiT5tPUZaedmnzmdZQL5jJ19yFVsccpGSxxPVtd3QE1Jz6bgWX6K3o9JnwymB7Xt2vziQvnntqxZNCtHYtPG1DjVq2GYYFoxT3KCEMFbfoinsApNSG3jNyNxXxeikciuFYqk8hNCAEGoYfNMFPmNkHUDMFYpBERxbGSmw1JtZGfJLPyWHk8puUeQ1S1G29aysDaDuD9dGGp89J2MxM4oXmek8eUQzA83AW45oY5Vh7vLctQNcjXpXBPt69rhJjRriE27MyToawf48jerCApZVjUW9Sy24hykpjMKv6ttsqWrECy6bRBwWnTgUh11jMn8fcwUxwMkJEe5dNf5UDPqJ17fg72pF6aCHM7bp5Mm5GTVrjgmiTwdf9F5jTk9evz3nXdgMRPmJFFYApKpE947UKRJyzT5MpQtwQGEDHT9VaTkhgmAPYFeuK2Uznz7trJ1QtewkxJ3Sth72M7i9JPDEBnnmjaxsZ4FADBRsz4RBLntJndpWCvYJgxD96LxSwGFpb3FRooTvtG1Z8pRfHHjcowUr2vFaSpRyPhV6\">link</a> to try out. Here is a glimpse of the UI:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/1_hdJPM1ggTMtdcri1htvZdg.png\" alt=\"\"></p>\n<h2>Text Search</h2>\n<p>Now a comprehensive text searching is available to be able to outline the desired text. Regular Expressions are available among others.</p>\n<p>Here is a link for a quick <a href=\"http://play.aimstack.io:10004/runs/d9e89aa7875e44b2ba85612a/texts\">demo</a>. And a glimpse of the UI:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/1_pt8sjFzpbhomdqRDwKb-Mw.png\" alt=\"\"></p>\n<h2>Trendline on scatterplots</h2>\n<p>Now you can render a trendline over your scatterplots on Scatters Explorer. We have enabled linear and Loess trendline.</p>\n<p>Thanks to <a href=\"https://github.com/aimhubio/aim/issues/1160\">sjakkampudi</a> for the help on this one.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/2.png\" alt=\"\"></p>\n<h2>More Images Features</h2>\n<p>We have added a number of new tools to the Images Explorer</p>\n<h2>Display Images by original size</h2>\n<p>Now you can view &#x26; compare the tracked images by their original size. This has been a key missing ingredient for effective images comparison.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/original-size.png\" alt=\"\"></p>\n<h2>Align by width</h2>\n<p>You can also align images by their width. This is especially handy when long images are tracked, such as sound spectograms (40px / 1000px). This feature will allow to effectively compare such images.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/width.png\" alt=\"\"></p>\n<h2>Images Sorting</h2>\n<p>You can also apply sorting of images by any tracked available parameter. In this case I have enabled sorting by step in descending order to see the later generated images in my GAN experiments. A lot smoother than the ones above.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/sorting.png\" alt=\"\"></p>\n<h2>Learn more</h2>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/overview.html\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave Aim a star on GitHub for support.</p>"},"_id":"aim-3-4-–-remote-tracking-alpha-sorting-deleting-runs.md","_raw":{"sourceFilePath":"aim-3-4-–-remote-tracking-alpha-sorting-deleting-runs.md","sourceFileName":"aim-3-4-–-remote-tracking-alpha-sorting-deleting-runs.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-4-–-remote-tracking-alpha-sorting-deleting-runs"},"type":"Post"},{"title":"Aim 3.5 — TensorBoard logs support, Matplotlib integration & System Params logging","date":"2022-02-10T16:15:32.942Z","author":"Gev Soghomonian","description":"Hey team, Aim 3.5 featuring TensorBoard logs support is now available!! We are on a mission to democratize MLOps tools. ","slug":"aim-3-5-—-tensorboard-logs-support-matplotlib-integration-system-params-logging","image":"https://aimstack.io/wp-content/uploads/2022/02/1_8xQnlTBk3BmsoMgsaE_0oQ.png","draft":false,"categories":["New Releases"],"body":{"raw":"Hey team, Aim 3.5 featuring TensorBoard logs support is now available!! We are on a mission to democratize MLOps tools. Thanks to the awesome Aim community for the help and contributions.\n\nHere is what’s new:\n\n* Aim supports TensorBoard logs\n* Track system params, CLI ,Env, Executable, Git, Installed packages\n* Matplotlib figure tracking and visualization\n* Ability move runs between Aim repos\n\n> Special thanks to [gloryVine](https://github.com/gloryVine), [hughperkins](https://github.com/hughperkins), [Ssamdav](https://github.com/SSamDav), [ptaejoon](https://github.com/ptaejoon), mahnerak, gormat and [Mike](https://github.com/mikel-brostrom)l for feedback, issues and help.\n\n## TensorBoard logs support\n\n\n\nIt’s been one of the most highly requested features by the Aim community. This feature was available for Aim 2.x and folks used to love this it. However, we had to drop it due to the backend changes.\n\nNow its back! Better than it was before and this is how it works:\n\n```\n$ cd /path/to/.aim\n$ aim convert tf --logdir ~/tensorflow/logdir\n```\n\nThis command will  scan then convert the `scalar` and `image` type logs from your directory into Aim runs.\n\nRead more about how it works [here](https://aimstack.readthedocs.io/en/latest/guides/integrations/basic_aim_tensorflow_event_conversion.html).\n\n## Tracking Env info, git info with Aim\n\nTracking your ENV variables, CLI argument, git info, etc could be a lot of details to care about.\n\nNow there is a way to enable Aim to track the environment info automatically and they will be available as params.\n\nIt takes a small tweak to enable that:\n\n```\nrun = Run(log_system_params=True)\n```\n\nThen once tracked, you can search experiments based on these values too:\n\n```\nrun.__system_params.git_info.branch == 'feature/testing'\n```\n\nMore on this feature find out [here](https://aimstack.readthedocs.io/en/latest/guides/training_reproducibility.html).\n\n> A special UI for these tracked data is to be shipped with the next version.\n\n## Tracking Matplotlib figures\n\n\n\nStarting Aim 3.5 you can also track [Matplotlib](https://matplotlib.org/) figures with Aim. During research (especially with Jupyter Notebooks) Matplotlib is very helpful in rendering intermediate images for analysis.\n\nNow you can track all such figures on Aim (both as Matplotlib figure and as an image). When tracking as an image, you can query and compare them too at scale on the [Images Explorer.](https://aimstack.io/blog/new-releases/aim3-1-images-tracker-and-images-explorer/)\n\n![](https://aimstack.io/wp-content/uploads/2022/02/images-explorer.png)\n\n[Here are the docs for more details](https://aimstack.readthedocs.io/en/latest/guides/basic_aim_matplotlib.html).\n\n## Moving Runs between Aim repos\n\nWe have added a CLI command to move runs between folders.\n\nThis will allow to easily move your best runs from a draft scratch project to your main one with one command. Here is how it works:\n\n```\nim mv --destination /new/path/to/.aim <my_run_hash_1> ...\n\n```\n\n\\\nFor more info, check the runs subcommand docs [here](https://aimstack.readthedocs.io/en/latest/refs/cli.html#runs).\n\n## Learn more\n\n\n\n[Aim is on a mission to democratize AI dev tools.](https://aimstack.readthedocs.io/en/latest/overview.html)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling  and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p>Hey team, Aim 3.5 featuring TensorBoard logs support is now available!! We are on a mission to democratize MLOps tools. Thanks to the awesome Aim community for the help and contributions.</p>\n<p>Here is what’s new:</p>\n<ul>\n<li>Aim supports TensorBoard logs</li>\n<li>Track system params, CLI ,Env, Executable, Git, Installed packages</li>\n<li>Matplotlib figure tracking and visualization</li>\n<li>Ability move runs between Aim repos</li>\n</ul>\n<blockquote>\n<p>Special thanks to <a href=\"https://github.com/gloryVine\">gloryVine</a>, <a href=\"https://github.com/hughperkins\">hughperkins</a>, <a href=\"https://github.com/SSamDav\">Ssamdav</a>, <a href=\"https://github.com/ptaejoon\">ptaejoon</a>, mahnerak, gormat and <a href=\"https://github.com/mikel-brostrom\">Mike</a>l for feedback, issues and help.</p>\n</blockquote>\n<h2>TensorBoard logs support</h2>\n<p>It’s been one of the most highly requested features by the Aim community. This feature was available for Aim 2.x and folks used to love this it. However, we had to drop it due to the backend changes.</p>\n<p>Now its back! Better than it was before and this is how it works:</p>\n<pre><code>$ cd /path/to/.aim\n$ aim convert tf --logdir ~/tensorflow/logdir\n</code></pre>\n<p>This command will  scan then convert the <code>scalar</code> and <code>image</code> type logs from your directory into Aim runs.</p>\n<p>Read more about how it works <a href=\"https://aimstack.readthedocs.io/en/latest/guides/integrations/basic_aim_tensorflow_event_conversion.html\">here</a>.</p>\n<h2>Tracking Env info, git info with Aim</h2>\n<p>Tracking your ENV variables, CLI argument, git info, etc could be a lot of details to care about.</p>\n<p>Now there is a way to enable Aim to track the environment info automatically and they will be available as params.</p>\n<p>It takes a small tweak to enable that:</p>\n<pre><code>run = Run(log_system_params=True)\n</code></pre>\n<p>Then once tracked, you can search experiments based on these values too:</p>\n<pre><code>run.__system_params.git_info.branch == 'feature/testing'\n</code></pre>\n<p>More on this feature find out <a href=\"https://aimstack.readthedocs.io/en/latest/guides/training_reproducibility.html\">here</a>.</p>\n<blockquote>\n<p>A special UI for these tracked data is to be shipped with the next version.</p>\n</blockquote>\n<h2>Tracking Matplotlib figures</h2>\n<p>Starting Aim 3.5 you can also track <a href=\"https://matplotlib.org/\">Matplotlib</a> figures with Aim. During research (especially with Jupyter Notebooks) Matplotlib is very helpful in rendering intermediate images for analysis.</p>\n<p>Now you can track all such figures on Aim (both as Matplotlib figure and as an image). When tracking as an image, you can query and compare them too at scale on the <a href=\"https://aimstack.io/blog/new-releases/aim3-1-images-tracker-and-images-explorer/\">Images Explorer.</a></p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/images-explorer.png\" alt=\"\"></p>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/guides/basic_aim_matplotlib.html\">Here are the docs for more details</a>.</p>\n<h2>Moving Runs between Aim repos</h2>\n<p>We have added a CLI command to move runs between folders.</p>\n<p>This will allow to easily move your best runs from a draft scratch project to your main one with one command. Here is how it works:</p>\n<pre><code>im mv --destination /new/path/to/.aim &#x3C;my_run_hash_1> ...\n\n</code></pre>\n<p><br>\nFor more info, check the runs subcommand docs <a href=\"https://aimstack.readthedocs.io/en/latest/refs/cli.html#runs\">here</a>.</p>\n<h2>Learn more</h2>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/overview.html\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling  and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-3-5-—-tensorboard-logs-support-matplotlib-integration-system-params-logging.md","_raw":{"sourceFilePath":"aim-3-5-—-tensorboard-logs-support-matplotlib-integration-system-params-logging.md","sourceFileName":"aim-3-5-—-tensorboard-logs-support-matplotlib-integration-system-params-logging.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-5-—-tensorboard-logs-support-matplotlib-integration-system-params-logging"},"type":"Post"},{"title":"Aim 3.6 — Chart export, PyTorch Ignite & Activeloop Hub integrations","date":"2022-02-24T16:27:07.254Z","author":"Gev Soghomonian","description":"Hey team, Aim 3.6 featuring Mlflow logs converter, Chart export, PyTorch Ignite & Activeloop Hub integrations is now available!","slug":"aim-3-6-—-chart-export-pytorch-ignite-activeloop-hub-integrations","image":"https://aimstack.io/wp-content/uploads/2022/02/3.6.0-banner.png","draft":false,"categories":["New Releases"],"body":{"raw":"Hey team, Aim 3.6 featuring Mlflow logs converter, Chart export, PyTorch Ignite & Activeloop Hub integrations is now available!\n\nWe are on a mission to democratize MLOps tools. Thanks to the awesome Aim community for the help and contributions.\n\nHere is what’s new in addition to [Aim 3.5](https://aimstack.io/aim-3-5-tensorboard-logs-support-matplotlib-integration-system-params-logging/).\n\n* Export chart as image\n* MLflow to Aim logs converter\n* Pytorch Ignite integration\n* Activeloop Hub integration\n* Wildcard support for *aim runs* subcommands\n\n*Special thanks to [krstp](https://github.com/krstp), [ptaejoon](https://github.com/ptaejoon), [farizrahman4u](https://github.com/farizrahman4u) from Activeloop, [vfdev-5](https://github.com/vfdev-5) from PyTorch Ignite, [hughperkins](https://github.com/hughperkins), [Ssamdav](https://github.com/ssamdav) and [mahnerak](https://github.com/mahnerak) for feedback, reviews and help.*\n\n## Export chart as image\n\nHey awesome Aim community, sorry for shipping [this feature](https://github.com/aimhubio/aim/issues/339) so late. We know it has been so highly requested, just couldn’t get our hands on it over and over again.\n\nNow the images export is here! You can export charts as JPEG, PNG and SVG so you can include the awesome Aim visuals in your reports and research papers.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/3.6.png)\n\nYou can control the width, height, the format of the downloadable image.\n\n> The ability to add / edit legends will be added in the coming versions.\n\nWould still love to hear feedback on how would you like us to tune this feature.\n\n## MLflow to Aim logs converter\n\n\n\nIts been also [requested](https://github.com/aimhubio/aim/issues/409) across the board by many users. Now you can convert your MLflow logs to Aim so you can compare all of them regardless on where it was tracked.\n\nHere is how it works:\n\n```\n$ aim init\n$ aim convert mlflow --tracking_uri 'file:///Users/aim_user/mlruns'\n```\n\nBesides the metrics, You can convert Images, Texts and Sound/Audios. More on that in [here](https://aimstack.readthedocs.io/en/latest/quick_start/convert_data.html#show-mlflow-logs-in-aim).\n\n![](https://aimstack.io/wp-content/uploads/2022/02/mlflow.png)\n\n## Pytorch Ignite integration\n\nFor all the Aim users who use PyTorch Ignite, there is now a native PI callback available so you can track your basic metrics automatically!\n\nHere is a code snippet on how to use the PI integration:\n\n```\n# call aim sdk designed for pytorch ignite\nfrom aim.pytorch_ignite import AimLogger\n\n# track experimential data by using Aim\naim_logger = AimLogger(\n    experiment='aim_on_pt_ignite',\n    train_metric_prefix='train_',\n    val_metric_prefix='val_',\n    test_metric_prefix='test_',\n)\n\n# track experimential data by using Aim\naim_logger.attach_output_handler(\n    train_evaluator,\n    event_name=Events.EPOCH_COMPLETED,\n    tag=\"train\",\n    metric_names=[\"nll\", \"accuracy\"],\n    global_step_transform=global_step_from_engine(trainer),\n)\n```\n\n![](https://aimstack.io/wp-content/uploads/2022/02/pytorch.png)\n\n## Activeloop Hub integration\n\n\n\nExcited to share that thanks to [an integration with Activeloop](https://activeloop.ai/), starting Aim 3.6 you can add your [Hub dataset](https://github.com/activeloopai/Hub) info as a run param and use them to search and compare your runs across all Explorers.\n\nHere is a code snippet to demonstrate the usage:\n\n```\nimport hub\n\nfrom aim.sdk.objects.plugins.hub_dataset import HubDataset\nfrom aim.sdk import Run\n\n# create dataset object\nds = hub.dataset('hub://activeloop/cifar100-test')\n\n# log dataset metadata\nrun = Run(system_tracking_interval=None)\nrun['hub_ds'] = HubDataset(ds)\n```\n\nThe following information becomes available among others:\n\n```\nrun.hub_ds.version\nrun.hub_ds.num_samples\nrun.hub_ds.tensors.name\nrun.hub_ds.tensors.compression_type\n```\n\nHub is an awesome tool to build, manage, query & visualize datasets for deep learning, as well as stream data real-time to PyTorch/TensorFlow & version-control it. Check out the [Hub docs](https://docs.activeloop.ai/).\n\n![](https://aimstack.io/wp-content/uploads/2022/02/hub.png)\n\nWildcard support for the \\`aim runs\\` command\n\nOn [Aim 3.5](https://aimstack.io/blog/new-releases/aim-3-5-tensorboard-logs-support-matplotlib-integration-system-params-logging/) we made available the `run mv` command which allows to move single runs between folders.\n\nNow we have also added the wildcard to move the whole folder altogether\n\nHere is the CLI interface:\n\n```\n$ aim runs --repo <source_repo/.aim> mv * --destination <dest_repo/.aim>\n```\n\n## Learn More\n\n[Aim is on a mission to democratize AI dev tools.](https://aimstack.readthedocs.io/en/latest/overview.html)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](http://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p>Hey team, Aim 3.6 featuring Mlflow logs converter, Chart export, PyTorch Ignite &#x26; Activeloop Hub integrations is now available!</p>\n<p>We are on a mission to democratize MLOps tools. Thanks to the awesome Aim community for the help and contributions.</p>\n<p>Here is what’s new in addition to <a href=\"https://aimstack.io/aim-3-5-tensorboard-logs-support-matplotlib-integration-system-params-logging/\">Aim 3.5</a>.</p>\n<ul>\n<li>Export chart as image</li>\n<li>MLflow to Aim logs converter</li>\n<li>Pytorch Ignite integration</li>\n<li>Activeloop Hub integration</li>\n<li>Wildcard support for <em>aim runs</em> subcommands</li>\n</ul>\n<p><em>Special thanks to <a href=\"https://github.com/krstp\">krstp</a>, <a href=\"https://github.com/ptaejoon\">ptaejoon</a>, <a href=\"https://github.com/farizrahman4u\">farizrahman4u</a> from Activeloop, <a href=\"https://github.com/vfdev-5\">vfdev-5</a> from PyTorch Ignite, <a href=\"https://github.com/hughperkins\">hughperkins</a>, <a href=\"https://github.com/ssamdav\">Ssamdav</a> and <a href=\"https://github.com/mahnerak\">mahnerak</a> for feedback, reviews and help.</em></p>\n<h2>Export chart as image</h2>\n<p>Hey awesome Aim community, sorry for shipping <a href=\"https://github.com/aimhubio/aim/issues/339\">this feature</a> so late. We know it has been so highly requested, just couldn’t get our hands on it over and over again.</p>\n<p>Now the images export is here! You can export charts as JPEG, PNG and SVG so you can include the awesome Aim visuals in your reports and research papers.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/3.6.png\" alt=\"\"></p>\n<p>You can control the width, height, the format of the downloadable image.</p>\n<blockquote>\n<p>The ability to add / edit legends will be added in the coming versions.</p>\n</blockquote>\n<p>Would still love to hear feedback on how would you like us to tune this feature.</p>\n<h2>MLflow to Aim logs converter</h2>\n<p>Its been also <a href=\"https://github.com/aimhubio/aim/issues/409\">requested</a> across the board by many users. Now you can convert your MLflow logs to Aim so you can compare all of them regardless on where it was tracked.</p>\n<p>Here is how it works:</p>\n<pre><code>$ aim init\n$ aim convert mlflow --tracking_uri 'file:///Users/aim_user/mlruns'\n</code></pre>\n<p>Besides the metrics, You can convert Images, Texts and Sound/Audios. More on that in <a href=\"https://aimstack.readthedocs.io/en/latest/quick_start/convert_data.html#show-mlflow-logs-in-aim\">here</a>.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/mlflow.png\" alt=\"\"></p>\n<h2>Pytorch Ignite integration</h2>\n<p>For all the Aim users who use PyTorch Ignite, there is now a native PI callback available so you can track your basic metrics automatically!</p>\n<p>Here is a code snippet on how to use the PI integration:</p>\n<pre><code># call aim sdk designed for pytorch ignite\nfrom aim.pytorch_ignite import AimLogger\n\n# track experimential data by using Aim\naim_logger = AimLogger(\n    experiment='aim_on_pt_ignite',\n    train_metric_prefix='train_',\n    val_metric_prefix='val_',\n    test_metric_prefix='test_',\n)\n\n# track experimential data by using Aim\naim_logger.attach_output_handler(\n    train_evaluator,\n    event_name=Events.EPOCH_COMPLETED,\n    tag=\"train\",\n    metric_names=[\"nll\", \"accuracy\"],\n    global_step_transform=global_step_from_engine(trainer),\n)\n</code></pre>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/pytorch.png\" alt=\"\"></p>\n<h2>Activeloop Hub integration</h2>\n<p>Excited to share that thanks to <a href=\"https://activeloop.ai/\">an integration with Activeloop</a>, starting Aim 3.6 you can add your <a href=\"https://github.com/activeloopai/Hub\">Hub dataset</a> info as a run param and use them to search and compare your runs across all Explorers.</p>\n<p>Here is a code snippet to demonstrate the usage:</p>\n<pre><code>import hub\n\nfrom aim.sdk.objects.plugins.hub_dataset import HubDataset\nfrom aim.sdk import Run\n\n# create dataset object\nds = hub.dataset('hub://activeloop/cifar100-test')\n\n# log dataset metadata\nrun = Run(system_tracking_interval=None)\nrun['hub_ds'] = HubDataset(ds)\n</code></pre>\n<p>The following information becomes available among others:</p>\n<pre><code>run.hub_ds.version\nrun.hub_ds.num_samples\nrun.hub_ds.tensors.name\nrun.hub_ds.tensors.compression_type\n</code></pre>\n<p>Hub is an awesome tool to build, manage, query &#x26; visualize datasets for deep learning, as well as stream data real-time to PyTorch/TensorFlow &#x26; version-control it. Check out the <a href=\"https://docs.activeloop.ai/\">Hub docs</a>.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/hub.png\" alt=\"\"></p>\n<p>Wildcard support for the `aim runs` command</p>\n<p>On <a href=\"https://aimstack.io/blog/new-releases/aim-3-5-tensorboard-logs-support-matplotlib-integration-system-params-logging/\">Aim 3.5</a> we made available the <code>run mv</code> command which allows to move single runs between folders.</p>\n<p>Now we have also added the wildcard to move the whole folder altogether</p>\n<p>Here is the CLI interface:</p>\n<pre><code>$ aim runs --repo &#x3C;source_repo/.aim> mv * --destination &#x3C;dest_repo/.aim>\n</code></pre>\n<h2>Learn More</h2>\n<p><a href=\"https://aimstack.readthedocs.io/en/latest/overview.html\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"http://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-3-6-—-chart-export-pytorch-ignite-activeloop-hub-integrations.md","_raw":{"sourceFilePath":"aim-3-6-—-chart-export-pytorch-ignite-activeloop-hub-integrations.md","sourceFileName":"aim-3-6-—-chart-export-pytorch-ignite-activeloop-hub-integrations.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-3-6-—-chart-export-pytorch-ignite-activeloop-hub-integrations"},"type":"Post"},{"title":"Aim basics: using context and subplots to compare validation and test metrics","date":"2021-02-16T12:18:06.528Z","author":"Gev Soghomonian","description":"Validation and test metrics comparison is a crucial step in ML experiments. ML researchers divide datasets into three subsets — train, validation and test so they can test their model","slug":"aim-basics-using-context-and-subplots-to-compare-validation-and-test-metrics","image":"/images/dynamic/1.gif","draft":false,"categories":["Tutorials"],"body":{"raw":"Researchers divide datasets into three subsets — train, validation and test so they can test their model performance at different levels.\n\nThe model is trained on the train subset and subsequent metrics are collected to evaluate how well the training is going. Loss, accuracy and other metrics are computed.\n\nThe validation and test sets are used to test the model on additional unseen data to verify how well it generalise.\n\nModels are usually ran on validation subset after each epoch.\\\nOnce the training is done, models are tested on the test subset to verify the final performance and generalisation.\n\nThere is a need to collect and effectively compare all these metrics.\n\nHere is how to do that on [Aim](https://github.com/aimhubio/aim)\n\n# Using context to track for different subsets?\n\nUse the [aim.track](https://github.com/aimhubio/aim#track) context arguments to pass additional information about the metrics. All context parameters can be used to query, group and do other operations on top of the metrics.\n\n![](<script src=\"https://gist.github.com/SGevorg/e08524b3538d3f71d14bf1857a7bc6e9.js\"></script> \"Here is how it looks like on the code\")\n\nOnce the training is ran, execute `aim up` in your terminal and start the Aim UI.\n\n# Using subplots to compare test, val loss and bleu metrics\n\n> **\\*Note:** The bleu metric is used here instead of accuracy as we are looking at Neural Machine Translation experiments. But this works with every other metric too.*\n\nLet’s go step-by-step on how to break down lots of experiments using subplots.\n\n**Step 1.** Explore the runs, the context table, play with the query language.\n\n![](/images/dynamic/1_tfc_fuc-axk07z3-a7jsmg.gif \"Explore the training runs\")\n\n**Step 2.** Add the `bleu` metric to the Select input — query both metrics at the same time. Divide into subplots by metric.\n\n![](https://miro.medium.com/max/1400/1*BQK8qGoG3v4KMpssvzC0hw.gif \"Divide into subplots by metric\")\n\n**Step 3.** Search by `context.subset` to show both `test` and `val` `loss` and `bleu` metrics. Divide into subplots further by `context.subset` too so Aim UI shows `test` and `val` metrics on different subplots for better comparison.\n\n![](https://miro.medium.com/max/1400/1*fSm2PyNwbcBaAoZceq6Qsw.gif \"Divide into subplots by context / subset\")\n\nNot it’s easy and straightforward to simultaneously compare both 4 metrics and find the best version of the model.\n\n# Summary\n\nHere is a full summary video on how to do it on the UI.\n\n![](https://www.youtube.com/watch?v=DGI8S7SUfEk)\n\n# Learn More\n\nIf you find Aim useful, support us and [star the project](https://github.com/aimhubio/aim) on GitHub. Join the [Aim community](https://slack.aimstack.io/) and share more about your use-cases and how we can improve Aim to suit them.","html":"<p>Researchers divide datasets into three subsets — train, validation and test so they can test their model performance at different levels.</p>\n<p>The model is trained on the train subset and subsequent metrics are collected to evaluate how well the training is going. Loss, accuracy and other metrics are computed.</p>\n<p>The validation and test sets are used to test the model on additional unseen data to verify how well it generalise.</p>\n<p>Models are usually ran on validation subset after each epoch.<br>\nOnce the training is done, models are tested on the test subset to verify the final performance and generalisation.</p>\n<p>There is a need to collect and effectively compare all these metrics.</p>\n<p>Here is how to do that on <a href=\"https://github.com/aimhubio/aim\">Aim</a></p>\n<h1>Using context to track for different subsets?</h1>\n<p>Use the <a href=\"https://github.com/aimhubio/aim#track\">aim.track</a> context arguments to pass additional information about the metrics. All context parameters can be used to query, group and do other operations on top of the metrics.</p>\n<p>![]( \"Here is how it looks like on the code\")</p>\n<p>Once the training is ran, execute <code>aim up</code> in your terminal and start the Aim UI.</p>\n<h1>Using subplots to compare test, val loss and bleu metrics</h1>\n<blockquote>\n<p><strong>*Note:</strong> The bleu metric is used here instead of accuracy as we are looking at Neural Machine Translation experiments. But this works with every other metric too.*</p>\n</blockquote>\n<p>Let’s go step-by-step on how to break down lots of experiments using subplots.</p>\n<p><strong>Step 1.</strong> Explore the runs, the context table, play with the query language.</p>\n<p><img src=\"/images/dynamic/1_tfc_fuc-axk07z3-a7jsmg.gif\" alt=\"\" title=\"Explore the training runs\"></p>\n<p><strong>Step 2.</strong> Add the <code>bleu</code> metric to the Select input — query both metrics at the same time. Divide into subplots by metric.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*BQK8qGoG3v4KMpssvzC0hw.gif\" alt=\"\" title=\"Divide into subplots by metric\"></p>\n<p><strong>Step 3.</strong> Search by <code>context.subset</code> to show both <code>test</code> and <code>val</code> <code>loss</code> and <code>bleu</code> metrics. Divide into subplots further by <code>context.subset</code> too so Aim UI shows <code>test</code> and <code>val</code> metrics on different subplots for better comparison.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*fSm2PyNwbcBaAoZceq6Qsw.gif\" alt=\"\" title=\"Divide into subplots by context / subset\"></p>\n<p>Not it’s easy and straightforward to simultaneously compare both 4 metrics and find the best version of the model.</p>\n<h1>Summary</h1>\n<p>Here is a full summary video on how to do it on the UI.</p>\n<p><img src=\"https://www.youtube.com/watch?v=DGI8S7SUfEk\" alt=\"\"></p>\n<h1>Learn More</h1>\n<p>If you find Aim useful, support us and <a href=\"https://github.com/aimhubio/aim\">star the project</a> on GitHub. Join the <a href=\"https://slack.aimstack.io/\">Aim community</a> and share more about your use-cases and how we can improve Aim to suit them.</p>"},"_id":"aim-basics-using-context-and-subplots-to-compare-validation-and-test-metrics.md","_raw":{"sourceFilePath":"aim-basics-using-context-and-subplots-to-compare-validation-and-test-metrics.md","sourceFileName":"aim-basics-using-context-and-subplots-to-compare-validation-and-test-metrics.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-basics-using-context-and-subplots-to-compare-validation-and-test-metrics"},"type":"Post"},{"title":"Aim v2.2.0 — Hugging Face integration","date":"2021-03-24T13:20:24.937Z","author":"Gev Soghomonian","description":"Aim 2.2.0 featuring Hugging Face integration is out! Thanks to the incredible Aim community for the feedback and support on building democratized open-source AI dev tools.","slug":"aim-v2-2-0-—-hugging-face-integration","image":"https://aimstack.io/wp-content/uploads/2022/02/HF.png","draft":false,"categories":["New Releases"],"body":{"raw":"[Aim](https://github.com/aimhubio/aim) 2.2.0 featuring Hugging Face integration is out! Thanks to the incredible Aim community for the feedback and support on building democratized open-source AI dev tools.\n\nThanks to [siddk](https://github.com/siddk), [TommasoBendinelli](https://github.com/TommasoBendinelli) and [Khazhak](https://github.com/Khazhak) for their contribution to this release.\n\n> **Note on the Aim versioning:** The previous two release posts: [Aim 1.3.5](https://aimstack.io/blog/new-releases/mlops-tools-aim-1-3-5-activity-view-and-x-axis-alignment/) and [Aim 1.3.8](https://aimstack.io/blog/new-releases/aim-1-3-8-enhanced-context-table-and-advanced-group-coloring/) had used the version number of [AimUI](https://aimstack.readthedocs.io/en/latest/ui/overview.html) as those contained only UI changes. From now on we are going to stick to the Aim versions only regardless of the type of changes to avoid any confusion. [Check out the Aim CHANGELOG](https://github.com/aimhubio/aim/blob/main/CHANGELOG.md).\n\nWe have also added [milestones](https://github.com/aimhubio/aim/milestones) for each version. As well as the [Roadmap](https://github.com/aimhubio/aim#roadmap).\n\nCheck out the new features at [play.aimstack.io](http://play.aimstack.io:43900/dashboard).\n\n## Hugging Face integration\n\nHugging Face integration has been one of the most requested features so far and we are excited to finally ship it. Here is a code snippet of easy it is to integrate Aim and Hugging Face.\n\n```\nfrom aim.hugging_face import AimCallback\nfrom transformers import Trainer\n\naim_callback = AimCallback(repo='/log/dir/path', experiment='your_experiment_name')\n\ntrainer = Trainer(\n       model=model,\n       args=training_args,\n       callbacks=[aim_callback]\n    )\n```\n\nHere is how it works: `aim_callback` will automatically open an Aim `Session` and close it when the trainer is done. When `trainer.train()`, `trainer.evaluate()` or `trainer.predict()` is called, `aim_callback` will automatically log the hyper-params and respective metrics.\n\nFind a full example [here](https://github.com/aimhubio/aim/blob/main/examples/hugging_face_track.py).\n\n## Metric Visibility Control\n\nWhen dealing with lots of experiments some metrics may need hide (while still being in the Search) to allow better visibility of the overall picture.\n\nA toggle is now available both for each metric/row as well as for global on/off. Check out the demo below:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo.gif \"Hide individual metrics as well as collectively\")\n\n## Column resize\n\n\n\nWith lots of params tracked, some of them are too wide for table and take over the whole screen real estate. Column resize will allow to fully control data width on the table. Resize is available both on Explore and Dashboard tables.Here is a quick demo:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo2.gif \"Drag column edges back-and-forth to resize\")\n\n## Hide columns with similar values\n\n\n\nMore often than not params have lots of repetition. Especially when tracking 100s of them. In that case the explore table becomes super-noisy.\n\nThis feature allows showing only the relevant info. This has been certainly the missing piece of the column management that many had requested. Here is a quick demo:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo3.gif \"Leave only different columns with a button click, if needed customize afterwards\")\n\n## Logscale\n\n\n\nOne of the must-have features that we hadn’t had a chance to work on. Finally it’s available!!\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo4.gif \"log-scale on Aim\")\n\n## New methods for aggregation\n\n\n\nNow you can select different types of aggregations as well as whether to see the whole area or just the aggregated lines.\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo5.gif)\n\n## Learn More\n\n[Aim is on the mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://slack.aimstack.io/), share your feedback.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support 🙌.","html":"<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> 2.2.0 featuring Hugging Face integration is out! Thanks to the incredible Aim community for the feedback and support on building democratized open-source AI dev tools.</p>\n<p>Thanks to <a href=\"https://github.com/siddk\">siddk</a>, <a href=\"https://github.com/TommasoBendinelli\">TommasoBendinelli</a> and <a href=\"https://github.com/Khazhak\">Khazhak</a> for their contribution to this release.</p>\n<blockquote>\n<p><strong>Note on the Aim versioning:</strong> The previous two release posts: <a href=\"https://aimstack.io/blog/new-releases/mlops-tools-aim-1-3-5-activity-view-and-x-axis-alignment/\">Aim 1.3.5</a> and <a href=\"https://aimstack.io/blog/new-releases/aim-1-3-8-enhanced-context-table-and-advanced-group-coloring/\">Aim 1.3.8</a> had used the version number of <a href=\"https://aimstack.readthedocs.io/en/latest/ui/overview.html\">AimUI</a> as those contained only UI changes. From now on we are going to stick to the Aim versions only regardless of the type of changes to avoid any confusion. <a href=\"https://github.com/aimhubio/aim/blob/main/CHANGELOG.md\">Check out the Aim CHANGELOG</a>.</p>\n</blockquote>\n<p>We have also added <a href=\"https://github.com/aimhubio/aim/milestones\">milestones</a> for each version. As well as the <a href=\"https://github.com/aimhubio/aim#roadmap\">Roadmap</a>.</p>\n<p>Check out the new features at <a href=\"http://play.aimstack.io:43900/dashboard\">play.aimstack.io</a>.</p>\n<h2>Hugging Face integration</h2>\n<p>Hugging Face integration has been one of the most requested features so far and we are excited to finally ship it. Here is a code snippet of easy it is to integrate Aim and Hugging Face.</p>\n<pre><code>from aim.hugging_face import AimCallback\nfrom transformers import Trainer\n\naim_callback = AimCallback(repo='/log/dir/path', experiment='your_experiment_name')\n\ntrainer = Trainer(\n       model=model,\n       args=training_args,\n       callbacks=[aim_callback]\n    )\n</code></pre>\n<p>Here is how it works: <code>aim_callback</code> will automatically open an Aim <code>Session</code> and close it when the trainer is done. When <code>trainer.train()</code>, <code>trainer.evaluate()</code> or <code>trainer.predict()</code> is called, <code>aim_callback</code> will automatically log the hyper-params and respective metrics.</p>\n<p>Find a full example <a href=\"https://github.com/aimhubio/aim/blob/main/examples/hugging_face_track.py\">here</a>.</p>\n<h2>Metric Visibility Control</h2>\n<p>When dealing with lots of experiments some metrics may need hide (while still being in the Search) to allow better visibility of the overall picture.</p>\n<p>A toggle is now available both for each metric/row as well as for global on/off. Check out the demo below:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo.gif\" alt=\"\" title=\"Hide individual metrics as well as collectively\"></p>\n<h2>Column resize</h2>\n<p>With lots of params tracked, some of them are too wide for table and take over the whole screen real estate. Column resize will allow to fully control data width on the table. Resize is available both on Explore and Dashboard tables.Here is a quick demo:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo2.gif\" alt=\"\" title=\"Drag column edges back-and-forth to resize\"></p>\n<h2>Hide columns with similar values</h2>\n<p>More often than not params have lots of repetition. Especially when tracking 100s of them. In that case the explore table becomes super-noisy.</p>\n<p>This feature allows showing only the relevant info. This has been certainly the missing piece of the column management that many had requested. Here is a quick demo:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo3.gif\" alt=\"\" title=\"Leave only different columns with a button click, if needed customize afterwards\"></p>\n<h2>Logscale</h2>\n<p>One of the must-have features that we hadn’t had a chance to work on. Finally it’s available!!</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo4.gif\" alt=\"\" title=\"log-scale on Aim\"></p>\n<h2>New methods for aggregation</h2>\n<p>Now you can select different types of aggregations as well as whether to see the whole area or just the aggregated lines.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo5.gif\" alt=\"\"></p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on the mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://slack.aimstack.io/\">Aim community</a>, share your feedback.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support 🙌.</p>"},"_id":"aim-v2-2-0-—-hugging-face-integration.md","_raw":{"sourceFilePath":"aim-v2-2-0-—-hugging-face-integration.md","sourceFileName":"aim-v2-2-0-—-hugging-face-integration.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-v2-2-0-—-hugging-face-integration"},"type":"Post"},{"title":"Aim v2.3.0 — System Resource Usage and Reverse Grouping","date":"2021-04-20T13:39:39.516Z","author":"Gev Soghomonian","description":"Aim 2.3.0 allowing System Resource Usage optimization is out! Thanks to the community for feedback and support on our journey towards democratizing MLOps tools. Check out...","slug":"aim-v2-3-0-—-system-resource-usage-and-reverse-grouping","image":"https://aimstack.io/wp-content/uploads/2021/04/2.3.0-1.png","draft":false,"categories":["New Releases"],"body":{"raw":"[Aim](https://github.com/aimhubio/aim) 2.3.0 is out! Thanks to the community for feedback and support on our journey towards democratizing AI dev tools.\n\nCheck out the updated Aim at [play.aimstack.io](http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==).\n\nBelow are the highlight features of the update. Find the full list of changes [here](https://github.com/aimhubio/aim/milestone/3?closed=1).\n\n## System Resource Usage\n\n\n\nNow you can use automatic tracking of your system resources (GPU, CPU, Memory, etc). In order to disable system tracking, just initialize the session with `system_tracking_interval==0`.\n\nOnce you run the training, you will see the following. Here is a demo:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/demo-1.gif \"Aim automatic system resource tracking demo\")\n\nOf course you can also [query all those new metrics](https://aimstack.io/wp-admin/post.php?post=706&action=edit) in the Explore page and compare, group, aggregate with the rest of the metrics!\n\n## Reverse grouping (“against” the param)\n\n\n\nAs much as grouping is needed to divide pile of metrics by param values into manageable clusters for comparison, there are cases when the metrics need to be divided by everything BUT one param (yes, I am looking at you seed!). We have called it a Reverse Grouping. Here is how it works:\n\n![](https://aimstack.io/wp-content/uploads/2021/04/reverse-grouping-1024x566.gif \"Aim Reverse grouping demo\")\n\nUse the toggle next to switch between grouping modes.\n\n## Line Chart Smoothing\n\n\n\nNow you can apply smoothing on metrics. Here is how it works:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/metric-smoothing.gif \"Aim metric smoothing\")\n\nThere are two type of smoothing options available: `Exponential Moving Average` and `Central Moving Average`. Further info of [how](https://en.wikipedia.org/wiki/Moving_average) it’s calculated.\n\n## New aggregation modes\n\n\n\nWe have additionally added two more aggregation modes: `standard error` and `standard deviation` . Here is how it works:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/aggr-modes.gif)\n\n## Learn More\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. In fact, It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://aimstack.slack.com/?redir=%2Fssb%2Fredirect), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> 2.3.0 is out! Thanks to the community for feedback and support on our journey towards democratizing AI dev tools.</p>\n<p>Check out the updated Aim at <a href=\"http://play.aimstack.io:43900/explore?search=eyJjaGFydCI6eyJzZXR0aW5ncyI6eyJwZXJzaXN0ZW50Ijp7ImRpc3BsYXlPdXRsaWVycyI6ZmFsc2UsInpvb20iOm51bGwsImludGVycG9sYXRlIjp0cnVlLCJpbmRpY2F0b3IiOmZhbHNlLCJ4QWxpZ25tZW50Ijoic3RlcCIsInhTY2FsZSI6MCwieVNjYWxlIjowLCJwb2ludHNDb3VudCI6NTAsInNtb290aGluZ0FsZ29yaXRobSI6ImVtYSIsInNtb290aEZhY3RvciI6MC40NSwiYWdncmVnYXRlZCI6dHJ1ZX19LCJmb2N1c2VkIjp7ImNpcmNsZSI6eyJydW5IYXNoIjpudWxsLCJtZXRyaWNOYW1lIjpudWxsLCJ0cmFjZUNvbnRleHQiOm51bGx9fX0sInNlYXJjaCI6eyJxdWVyeSI6ImJsZXUsIGxvc3MgaWYgY29udGV4dC5zdWJzZXQgPT0gdGVzdCBhbmQgaHBhcmFtcy5sZWFybmluZ19yYXRlID4gMC4wMDAwMSIsInYiOjF9LCJjb250ZXh0RmlsdGVyIjp7Imdyb3VwQnlDb2xvciI6WyJwYXJhbXMuaHBhcmFtcy5tYXhfayJdLCJncm91cEJ5U3R5bGUiOltdLCJncm91cEJ5Q2hhcnQiOlsibWV0cmljIl0sImdyb3VwQWdhaW5zdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZSwiY2hhcnQiOmZhbHNlfSwiYWdncmVnYXRlZEFyZWEiOiJzdGRfZGV2IiwiYWdncmVnYXRlZExpbmUiOiJtZWRpYW4iLCJzZWVkIjp7ImNvbG9yIjoxMCwic3R5bGUiOjEwfSwicGVyc2lzdCI6eyJjb2xvciI6ZmFsc2UsInN0eWxlIjpmYWxzZX0sImFnZ3JlZ2F0ZWQiOnRydWV9fQ==\">play.aimstack.io</a>.</p>\n<p>Below are the highlight features of the update. Find the full list of changes <a href=\"https://github.com/aimhubio/aim/milestone/3?closed=1\">here</a>.</p>\n<h2>System Resource Usage</h2>\n<p>Now you can use automatic tracking of your system resources (GPU, CPU, Memory, etc). In order to disable system tracking, just initialize the session with <code>system_tracking_interval==0</code>.</p>\n<p>Once you run the training, you will see the following. Here is a demo:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/demo-1.gif\" alt=\"\" title=\"Aim automatic system resource tracking demo\"></p>\n<p>Of course you can also <a href=\"https://aimstack.io/wp-admin/post.php?post=706&#x26;action=edit\">query all those new metrics</a> in the Explore page and compare, group, aggregate with the rest of the metrics!</p>\n<h2>Reverse grouping (“against” the param)</h2>\n<p>As much as grouping is needed to divide pile of metrics by param values into manageable clusters for comparison, there are cases when the metrics need to be divided by everything BUT one param (yes, I am looking at you seed!). We have called it a Reverse Grouping. Here is how it works:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/04/reverse-grouping-1024x566.gif\" alt=\"\" title=\"Aim Reverse grouping demo\"></p>\n<p>Use the toggle next to switch between grouping modes.</p>\n<h2>Line Chart Smoothing</h2>\n<p>Now you can apply smoothing on metrics. Here is how it works:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/metric-smoothing.gif\" alt=\"\" title=\"Aim metric smoothing\"></p>\n<p>There are two type of smoothing options available: <code>Exponential Moving Average</code> and <code>Central Moving Average</code>. Further info of <a href=\"https://en.wikipedia.org/wiki/Moving_average\">how</a> it’s calculated.</p>\n<h2>New aggregation modes</h2>\n<p>We have additionally added two more aggregation modes: <code>standard error</code> and <code>standard deviation</code> . Here is how it works:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/aggr-modes.gif\" alt=\"\"></p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. In fact, It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://aimstack.slack.com/?redir=%2Fssb%2Fredirect\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-v2-3-0-—-system-resource-usage-and-reverse-grouping.md","_raw":{"sourceFilePath":"aim-v2-3-0-—-system-resource-usage-and-reverse-grouping.md","sourceFileName":"aim-v2-3-0-—-system-resource-usage-and-reverse-grouping.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-v2-3-0-—-system-resource-usage-and-reverse-grouping"},"type":"Post"},{"title":"Aim v2.6.0 — Docker requirement removed and Metric as x-axis","date":"2021-06-24T14:25:34.071Z","author":"Gev Soghomonian","description":"Before and after Aim v2.5.0","slug":"aim-v2-6-0 — docker-requirement-removed-and-metric-as-x-axis","image":"https://aimstack.io/wp-content/uploads/2021/06/2.6.0.png","draft":false,"categories":["New Releases"],"body":{"raw":"## Metric as an alternative x-axis\n\nSometimes when comparing the metrics, it’s not enough to just put them into perspective via subplots.\n\nFor instance in the quick demo below, we are looking at a Neural Machine Translation (NMT) problem where two metrics are being compared — `loss` and`bleu`. One of the main indicators of a performant model in NMT, is when higher values of `bleu` correlates with the lower values of `loss`.\n\nJust plotting them besides each other sometimes isn’t enough to see how they correlate. In this case we use `loss` as the x-axis to directly see the correlation between the `loss`and the`bleu` metrics for two groups of runs ( `max_k==3`and `max_k == 1`).\n\n![](https://aimstack.io/wp-content/uploads/2022/02/1_Y0wAL9nZ7IhgLOUr-cCRRQ.gif \"Demo for metric as alternative x-axis\")\n\nUsing a different metric as the x-axis helps to see the correlation between two metrics of training runs better.\n\n> **Note**: if the metric is not increasing monotonously, its values re-order. Then they set as the x-axis (see in case of the loss).\n\n## Learn More\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support.","html":"<h2>Metric as an alternative x-axis</h2>\n<p>Sometimes when comparing the metrics, it’s not enough to just put them into perspective via subplots.</p>\n<p>For instance in the quick demo below, we are looking at a Neural Machine Translation (NMT) problem where two metrics are being compared — <code>loss</code> and<code>bleu</code>. One of the main indicators of a performant model in NMT, is when higher values of <code>bleu</code> correlates with the lower values of <code>loss</code>.</p>\n<p>Just plotting them besides each other sometimes isn’t enough to see how they correlate. In this case we use <code>loss</code> as the x-axis to directly see the correlation between the <code>loss</code>and the<code>bleu</code> metrics for two groups of runs ( <code>max_k==3</code>and <code>max_k == 1</code>).</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/1_Y0wAL9nZ7IhgLOUr-cCRRQ.gif\" alt=\"\" title=\"Demo for metric as alternative x-axis\"></p>\n<p>Using a different metric as the x-axis helps to see the correlation between two metrics of training runs better.</p>\n<blockquote>\n<p><strong>Note</strong>: if the metric is not increasing monotonously, its values re-order. Then they set as the x-axis (see in case of the loss).</p>\n</blockquote>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support.</p>"},"_id":"aim-v2-6-0 — docker-requirement-removed-and-metric-as-x-axis.md","_raw":{"sourceFilePath":"aim-v2-6-0 — docker-requirement-removed-and-metric-as-x-axis.md","sourceFileName":"aim-v2-6-0 — docker-requirement-removed-and-metric-as-x-axis.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-v2-6-0 — docker-requirement-removed-and-metric-as-x-axis"},"type":"Post"},{"title":"Aim v2.7.1 — Table export and Explore view bookmarks","date":"2021-07-15T14:31:32.317Z","author":"Gev Soghomonian","description":"Aim v2.7.1 is out! We are on a journey to democratize MLOps tools. Thanks to the community for continuous support and feedback! Check out the updated","slug":"aim-v2-7-1-—-table-export-and-explore-view-bookmarks","image":"https://aimstack.io/wp-content/uploads/2021/07/v2.7.1.gif","draft":false,"categories":["New Releases"],"body":{"raw":"Aim v2.7.1 is out! We are on a journey to democratize MLOps tools. Thanks to the community for continuous support and feedback!\n\nCheck out the updated Aim demo at [play.aimstack.io](http://play.aimstack.io:43900/dashboard).\n\nBelow are the two main highlights of Aim v2.7.1.\n\n## Aim Table CSV export\n\nNow you can export both tables from Explore and Dashboard to a CSV file. Afterwards feel free to use the exported CSV file to import in your spreadsheets for reports or just import in your notebook and explore further in other ways (e.g. with [Pandas](https://pandas.pydata.org/)) for your MLOps needs.\n\n![](https://aimstack.io/wp-content/uploads/2021/07/csv-export.gif \"Exporting CSV from the Explore table\")\n\n## Bookmark/Save the Explore State \\[experimental]\n\nThis new feature helps to save/bookmark the Explore state for future access. The bookmarking ability is particularly helpful to save Explore views that contain certain insights you’d like to revisit.\n\nIn the future [releases](https://aimstack.io/aim-foundations-why-we-re-building-a-tensorboard-alternative/), we will build on top of this feature to potentially add notes, fully manage and share them. *For now, this feature is in experimental mode*. Please feel free to share more feedback and how we can improve its experience.\n\n![](https://aimstack.io/wp-content/uploads/2021/07/bookmark.gif \"Use bookmarks to save important explore states\")\n\n## Learn More\n\n[Aim is on a mission to democratize MLOps tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nWe have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.\n\nTry out [Aim](https://github.com/aimhubio/aim), join the [Aim community](https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ), share your feedback, open issues for new features, bugs.\n\nAnd don’t forget to leave [Aim](https://github.com/aimhubio/aim) a star on GitHub for support .","html":"<p>Aim v2.7.1 is out! We are on a journey to democratize MLOps tools. Thanks to the community for continuous support and feedback!</p>\n<p>Check out the updated Aim demo at <a href=\"http://play.aimstack.io:43900/dashboard\">play.aimstack.io</a>.</p>\n<p>Below are the two main highlights of Aim v2.7.1.</p>\n<h2>Aim Table CSV export</h2>\n<p>Now you can export both tables from Explore and Dashboard to a CSV file. Afterwards feel free to use the exported CSV file to import in your spreadsheets for reports or just import in your notebook and explore further in other ways (e.g. with <a href=\"https://pandas.pydata.org/\">Pandas</a>) for your MLOps needs.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/07/csv-export.gif\" alt=\"\" title=\"Exporting CSV from the Explore table\"></p>\n<h2>Bookmark/Save the Explore State [experimental]</h2>\n<p>This new feature helps to save/bookmark the Explore state for future access. The bookmarking ability is particularly helpful to save Explore views that contain certain insights you’d like to revisit.</p>\n<p>In the future <a href=\"https://aimstack.io/aim-foundations-why-we-re-building-a-tensorboard-alternative/\">releases</a>, we will build on top of this feature to potentially add notes, fully manage and share them. <em>For now, this feature is in experimental mode</em>. Please feel free to share more feedback and how we can improve its experience.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/07/bookmark.gif\" alt=\"\" title=\"Use bookmarks to save important explore states\"></p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize MLOps tools.</a></p>\n<p>We have been incredibly lucky to get help and contributions from the amazing Aim community. It’s humbling and inspiring.</p>\n<p>Try out <a href=\"https://github.com/aimhubio/aim\">Aim</a>, join the <a href=\"https://join.slack.com/t/aimstack/shared_invite/zt-193hk43nr-vmi7zQkLwoxQXn8LW9CQWQ\">Aim community</a>, share your feedback, open issues for new features, bugs.</p>\n<p>And don’t forget to leave <a href=\"https://github.com/aimhubio/aim\">Aim</a> a star on GitHub for support .</p>"},"_id":"aim-v2-7-1-—-table-export-and-explore-view-bookmarks.md","_raw":{"sourceFilePath":"aim-v2-7-1-—-table-export-and-explore-view-bookmarks.md","sourceFileName":"aim-v2-7-1-—-table-export-and-explore-view-bookmarks.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim-v2-7-1-—-table-export-and-explore-view-bookmarks"},"type":"Post"},{"title":"Aim’s foundations & why we’re building a Tensorboard alternative","date":"2021-10-22T14:48:48.452Z","author":"Gev Soghomonian","description":"The origins of Aim In the fateful summer of 2020, our friend mahnerak – a researcher at a non-profit lab was hitting the limits of Tensorboard. He wasn’t","slug":"aim’s-foundations-why-we’re-building-a-tensorboard-alternative","image":"https://aimstack.io/wp-content/uploads/2021/08/3.0.png","draft":false,"categories":["New Releases"],"body":{"raw":"## The origins of Aim\n\nIn the fateful summer of 2020, our friend [mahnerak](https://twitter.com/mahnerak) – a researcher at [a non-profit lab](https://yerevann.com/) was hitting the limits of Tensorboard. He wasn’t going to send the training logs to a third-party cloud. Meanwhile, spending hours on Tensorboard bothered to focus on his actual research. That’s how we decided to build a Tensorboard alternative.\n\n[Gor](https://github.com/gorarakelyan) and I started hacking on an open-source library to store metrics and hyperparameters. In a month, mahnerak was using Aim 1.0 instead of Tensorboard to track, store, search and group his metrics.\n\nBy fall 2020, [Aim 2.0](https://aimstack.io/aim-v2-2-0-hugging-face-integration/) launched as a free, open-source and self-hosted alternative to Weights and Biases, Tensorboard and MLflow. To our surprise even [r/MachineLearning loved it](https://www.reddit.com/r/MachineLearning/comments/jfgbij/project_aim_a_supereasy_way_to_record_search_and/).\n\n By spring 2021, mahnerak co-authoerd a paper [WARP](https://aclanthology.org/2021.acl-long.381/) ([code](https://github.com/yerevann/warp)): Word-level Adverserial ReProgramming on his ACL-published work. At that point Aim users had contributed over 100 feature requests already.\n\n## A scale problem\n\nBut Aim’s power users — who often do 5K+ runs —were hitting issues.\n\nAfter over 250 pull requests, 1.2K GitHub stars and 200 feature requests. *Live updates, image tracking, distribution tracking*… and Aim 2.0 was hitting the limits of Aim 1.0’s design.\n\nIn order to support the future, we had to make changes to the foundation now.\n\n## Launching Aim 3.0.0\n\nAn additional [317 pull requests](https://github.com/aimhubio/aim/milestone/13?closed=1) later, we are excited to launch Aim v3.0.0 !!!\n\nAs a result, the most important changes include:\n\n**A completely revamped UI**\n\n* Home page and run detail page\n* Runs, metrics and params explorers\n* Bookmarks and Tags\n\n**A completely revamped Aim Python SDK**\n\n* New and much more intuitive (but still quite vanilla) API to track your training runs\n* New and 10x faster embedded storage based on [Rocksdb](http://rocksdb.org/). This will allow us to store virtually any type of AI metadata. On the contrary, [AimRecords](https://github.com/aimhubio/aimrecords) was designed for metrics and hyperparams only.\n\nEnjoy the changes!\n\n![](https://aimstack.io/wp-content/uploads/2021/08/changes.gif)\n\n## Performance improvements\n\n* Average run query execution time on ~2000 runs: 0.784s.\n* Average metrics query execution time on ~2000 runs with 6000 metrics: 1.552s.\n* New UI works smooth with ~500 metrics displayed at the same time with full Aim table interactions (*for comparison, v2 was performant with limitation for only 100 metrics*).\n\n## Comparisons to familiar tools\n\n### Tensorboard\n\n**Training run comparison**\n\n* The tracked params are first class citizens at Aim. So, you can search, group, and aggregate via params. Aim allows to deeply explore all the tracked data (metrics, params, images) on the UI.\n* With Tensorboard alternative solution the users are forced to record those parameters in the training run name to be able to search and compare. This causes a super tedious comparison experience and usability issues on the UI when there are many experiments and params. After all, TensorBoard doesn’t have features to group, aggregate the metrics\n\n**Scalability**\n\n* Aim can handle 1000s of training runs both on the backend and on the UI.\n* TensorBoard becomes really slow and hard to use when a few hundred training runs are queried / compared.\n\nAim will have the beloved TB visualizations\n\n* Embedding projector.\n* Neural network visualization.\n\n### [](https://github.com/aimhubio/aim#mlflow)MLFlow\n\nMLflow is an end-to-end ML Lifecycle tool. Aim is focused on training tracking. In general, the differences of Aim and MLflow are around the UI scalability and run comparison features.\n\n**Run comparison**\n\n* Aim treats tracked parameters as first-class citizens. Users can query runs, metrics and images. Also, they can filter using the params.\n* MLflow does have a search by tracked config. However, there is no feature availability such as grouping, aggregation, subplotting by hyparparams .\n\n**UI Scalability**\n\n* Aim UI can handle several thousands of metrics at the same time smoothly with 1000s of steps. It may get shaky when you explore 1000s of metrics with 10000s of steps each. But we are constantly optimizing!\n* MLflow UI becomes slow to use when there are a few hundreds of runs.\n\n### [](https://github.com/aimhubio/aim#weights-and-biases)Weights and Biases\n\n**Hosted vs self-hosted**\n\n* Weights and Biases is a hosted closed-source MLOps platform.\n* Aim is self-hosted, free and open-source experiment tracking tool.\n\n## Aim Roadmap[](https://github.com/aimhubio/aim#tensorboard)\n\nWith this version we are also publishing the Aim [roadmap](https://github.com/aimhubio/aim#roadmap) for the next 3 months.\n\nThis is a living document and we hope that the community will help us shape it towards supporting the most important use-cases.\n\nWe are also [inviting community contributors](https://github.com/aimhubio/aim#community) to help us get there faster!\n\n## Why are we building Aim?\n\nWe have started to work on Aim with strong belief that the open-source is in the DNA of AI software (2.0) development.\n\nExisting open-source tools (TensorBoard, MLFlow) are super-inspiring for us.\n\nHowever we see lots of improvements to be made. Especially around issues like:\n\n* ability to handle 1000s of large-scale experiments\n* actionable, beautiful and performant visualizations\n* extensibility — how easy are the apis for extension/democratization?\n\nWith this in mind, we are inspired to build beautiful and performant AI dev tools with great APIs.\n\nOur mission…\n\nAim’s mission is to democratize AI dev tools. We believe that the best AI tools need to be:\n\n* open-source, open-data-format, community-driven\n* have great UI/UX, CLI and other interfaces for automation\n* performant both on UI and data\n* extensible — enable ways to build around for so many use-cases\n\n## Thanks to\n\n[Ruben Karapetyan](https://twitter.com/roubkar) for being the first to believe in this project and spending lots of his time and setting the foundations for the beautiful UI.\n\n[Mahnerak](https://twitter.com/mahnerak) for sharing his problems and continuously testing and coming up with better solutions on UX, features. Also for helping us build the next-gen storage for Aim.\n\nAim users Mohammad Elgaar, Vopani for continuous feedback on our work.\n\nThe contributors who have been relentlessly iterating over the course of the summer.\n\nOn to the next generation of ML tools!!\n\n## Join Us!\n\nJoin the [Aim community](https://slack.aimstack.io/), test Aim out, ask questions, help us build the future of AI tooling!\n\nIf you find Aim useful, drop by and star the repo ⭐","html":"<h2>The origins of Aim</h2>\n<p>In the fateful summer of 2020, our friend <a href=\"https://twitter.com/mahnerak\">mahnerak</a> – a researcher at <a href=\"https://yerevann.com/\">a non-profit lab</a> was hitting the limits of Tensorboard. He wasn’t going to send the training logs to a third-party cloud. Meanwhile, spending hours on Tensorboard bothered to focus on his actual research. That’s how we decided to build a Tensorboard alternative.</p>\n<p><a href=\"https://github.com/gorarakelyan\">Gor</a> and I started hacking on an open-source library to store metrics and hyperparameters. In a month, mahnerak was using Aim 1.0 instead of Tensorboard to track, store, search and group his metrics.</p>\n<p>By fall 2020, <a href=\"https://aimstack.io/aim-v2-2-0-hugging-face-integration/\">Aim 2.0</a> launched as a free, open-source and self-hosted alternative to Weights and Biases, Tensorboard and MLflow. To our surprise even <a href=\"https://www.reddit.com/r/MachineLearning/comments/jfgbij/project_aim_a_supereasy_way_to_record_search_and/\">r/MachineLearning loved it</a>.</p>\n<p>By spring 2021, mahnerak co-authoerd a paper <a href=\"https://aclanthology.org/2021.acl-long.381/\">WARP</a> (<a href=\"https://github.com/yerevann/warp\">code</a>): Word-level Adverserial ReProgramming on his ACL-published work. At that point Aim users had contributed over 100 feature requests already.</p>\n<h2>A scale problem</h2>\n<p>But Aim’s power users — who often do 5K+ runs —were hitting issues.</p>\n<p>After over 250 pull requests, 1.2K GitHub stars and 200 feature requests. <em>Live updates, image tracking, distribution tracking</em>… and Aim 2.0 was hitting the limits of Aim 1.0’s design.</p>\n<p>In order to support the future, we had to make changes to the foundation now.</p>\n<h2>Launching Aim 3.0.0</h2>\n<p>An additional <a href=\"https://github.com/aimhubio/aim/milestone/13?closed=1\">317 pull requests</a> later, we are excited to launch Aim v3.0.0 !!!</p>\n<p>As a result, the most important changes include:</p>\n<p><strong>A completely revamped UI</strong></p>\n<ul>\n<li>Home page and run detail page</li>\n<li>Runs, metrics and params explorers</li>\n<li>Bookmarks and Tags</li>\n</ul>\n<p><strong>A completely revamped Aim Python SDK</strong></p>\n<ul>\n<li>New and much more intuitive (but still quite vanilla) API to track your training runs</li>\n<li>New and 10x faster embedded storage based on <a href=\"http://rocksdb.org/\">Rocksdb</a>. This will allow us to store virtually any type of AI metadata. On the contrary, <a href=\"https://github.com/aimhubio/aimrecords\">AimRecords</a> was designed for metrics and hyperparams only.</li>\n</ul>\n<p>Enjoy the changes!</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/08/changes.gif\" alt=\"\"></p>\n<h2>Performance improvements</h2>\n<ul>\n<li>Average run query execution time on ~2000 runs: 0.784s.</li>\n<li>Average metrics query execution time on ~2000 runs with 6000 metrics: 1.552s.</li>\n<li>New UI works smooth with ~500 metrics displayed at the same time with full Aim table interactions (<em>for comparison, v2 was performant with limitation for only 100 metrics</em>).</li>\n</ul>\n<h2>Comparisons to familiar tools</h2>\n<h3>Tensorboard</h3>\n<p><strong>Training run comparison</strong></p>\n<ul>\n<li>The tracked params are first class citizens at Aim. So, you can search, group, and aggregate via params. Aim allows to deeply explore all the tracked data (metrics, params, images) on the UI.</li>\n<li>With Tensorboard alternative solution the users are forced to record those parameters in the training run name to be able to search and compare. This causes a super tedious comparison experience and usability issues on the UI when there are many experiments and params. After all, TensorBoard doesn’t have features to group, aggregate the metrics</li>\n</ul>\n<p><strong>Scalability</strong></p>\n<ul>\n<li>Aim can handle 1000s of training runs both on the backend and on the UI.</li>\n<li>TensorBoard becomes really slow and hard to use when a few hundred training runs are queried / compared.</li>\n</ul>\n<p>Aim will have the beloved TB visualizations</p>\n<ul>\n<li>Embedding projector.</li>\n<li>Neural network visualization.</li>\n</ul>\n<h3><a href=\"https://github.com/aimhubio/aim#mlflow\"></a>MLFlow</h3>\n<p>MLflow is an end-to-end ML Lifecycle tool. Aim is focused on training tracking. In general, the differences of Aim and MLflow are around the UI scalability and run comparison features.</p>\n<p><strong>Run comparison</strong></p>\n<ul>\n<li>Aim treats tracked parameters as first-class citizens. Users can query runs, metrics and images. Also, they can filter using the params.</li>\n<li>MLflow does have a search by tracked config. However, there is no feature availability such as grouping, aggregation, subplotting by hyparparams .</li>\n</ul>\n<p><strong>UI Scalability</strong></p>\n<ul>\n<li>Aim UI can handle several thousands of metrics at the same time smoothly with 1000s of steps. It may get shaky when you explore 1000s of metrics with 10000s of steps each. But we are constantly optimizing!</li>\n<li>MLflow UI becomes slow to use when there are a few hundreds of runs.</li>\n</ul>\n<h3><a href=\"https://github.com/aimhubio/aim#weights-and-biases\"></a>Weights and Biases</h3>\n<p><strong>Hosted vs self-hosted</strong></p>\n<ul>\n<li>Weights and Biases is a hosted closed-source MLOps platform.</li>\n<li>Aim is self-hosted, free and open-source experiment tracking tool.</li>\n</ul>\n<h2>Aim Roadmap<a href=\"https://github.com/aimhubio/aim#tensorboard\"></a></h2>\n<p>With this version we are also publishing the Aim <a href=\"https://github.com/aimhubio/aim#roadmap\">roadmap</a> for the next 3 months.</p>\n<p>This is a living document and we hope that the community will help us shape it towards supporting the most important use-cases.</p>\n<p>We are also <a href=\"https://github.com/aimhubio/aim#community\">inviting community contributors</a> to help us get there faster!</p>\n<h2>Why are we building Aim?</h2>\n<p>We have started to work on Aim with strong belief that the open-source is in the DNA of AI software (2.0) development.</p>\n<p>Existing open-source tools (TensorBoard, MLFlow) are super-inspiring for us.</p>\n<p>However we see lots of improvements to be made. Especially around issues like:</p>\n<ul>\n<li>ability to handle 1000s of large-scale experiments</li>\n<li>actionable, beautiful and performant visualizations</li>\n<li>extensibility — how easy are the apis for extension/democratization?</li>\n</ul>\n<p>With this in mind, we are inspired to build beautiful and performant AI dev tools with great APIs.</p>\n<p>Our mission…</p>\n<p>Aim’s mission is to democratize AI dev tools. We believe that the best AI tools need to be:</p>\n<ul>\n<li>open-source, open-data-format, community-driven</li>\n<li>have great UI/UX, CLI and other interfaces for automation</li>\n<li>performant both on UI and data</li>\n<li>extensible — enable ways to build around for so many use-cases</li>\n</ul>\n<h2>Thanks to</h2>\n<p><a href=\"https://twitter.com/roubkar\">Ruben Karapetyan</a> for being the first to believe in this project and spending lots of his time and setting the foundations for the beautiful UI.</p>\n<p><a href=\"https://twitter.com/mahnerak\">Mahnerak</a> for sharing his problems and continuously testing and coming up with better solutions on UX, features. Also for helping us build the next-gen storage for Aim.</p>\n<p>Aim users Mohammad Elgaar, Vopani for continuous feedback on our work.</p>\n<p>The contributors who have been relentlessly iterating over the course of the summer.</p>\n<p>On to the next generation of ML tools!!</p>\n<h2>Join Us!</h2>\n<p>Join the <a href=\"https://slack.aimstack.io/\">Aim community</a>, test Aim out, ask questions, help us build the future of AI tooling!</p>\n<p>If you find Aim useful, drop by and star the repo ⭐</p>"},"_id":"aim’s-foundations-why-we’re-building-a-tensorboard-alternative.md","_raw":{"sourceFilePath":"aim’s-foundations-why-we’re-building-a-tensorboard-alternative.md","sourceFileName":"aim’s-foundations-why-we’re-building-a-tensorboard-alternative.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"aim’s-foundations-why-we’re-building-a-tensorboard-alternative"},"type":"Post"},{"title":"An end-to-end example of Aim logger used with XGBoost library","date":"2021-05-17T14:12:33.016Z","author":"Khazhak Galstyan","description":" Thanks to the community for feedback and support on our journey towards democratizing MLOps tools. Check out […]  Read More 122  0 XGBoost  Tutorials An end-to-end example of Aim logger used… What is Aim? Aim is an open-source tool for AI experiment comparison. With more resources and complex models, more experiments are ran than ever. ","slug":"an-end-to-end-example-of-aim-logger-used-with-xgboost-library","image":"https://aimstack.io/wp-content/uploads/2022/02/xgboost.png","draft":false,"categories":["Tutorials"],"body":{"raw":"## What is Aim?\n\n[Aim](https://github.com/aimhubio/aim) is an open-source tool for AI experiment comparison. With more resources and complex models, more experiments are ran than ever. You can indeed use Aim to deeply inspect thousands of hyperparameter-sensitive training runs.\n\n## What is XGBoost?\n\n[XGBoost](https://github.com/dmlc/xgboost) is an optimized gradient boosting library with highly  *efficient*,  *flexible,*  and  *portable* design. XGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solves many data science problems in a fast and accurate way. Subsequently, the same code runs on major distributed environment (Kubernetes, Hadoop, SGE, MPI, Dask) and can solve problems beyond billions of examples.\n\n## How to use Aim with XGBoost?\n\nCheck out end-to-end [Aim integration](https://aimstack.io/aim-2-4-0-xgboost-integration-and-confidence-interval-aggregation/) examples with multiple frameworks [here](https://github.com/aimhubio/aim/tree/main/examples). In this tutorial, we are going to show how to integrate Aim and use AimCallback in your XGBoost code.\n\n```\n# You should download and extract the data beforehand. Simply by doing this: \n# wget https://archive.ics.uci.edu/ml/machine-learning-databases/dermatology/dermatology.data\n\nfrom __future__ import division\n\nimport numpy as np\nimport xgboost as xgb\nfrom aim.xgboost import AimCallback\n\n# label need to be 0 to num_class -1\ndata = np.loadtxt('./dermatology.data', delimiter=',',\n        converters={33: lambda x:int(x == '?'), 34: lambda x:int(x) - 1})\nsz = data.shape\n\ntrain = data[:int(sz[0] * 0.7), :]\ntest = data[int(sz[0] * 0.7):, :]\n\ntrain_X = train[:, :33]\ntrain_Y = train[:, 34]\n\ntest_X = test[:, :33]\ntest_Y = test[:, 34]\nprint(len(train_X))\n\nxg_train = xgb.DMatrix(train_X, label=train_Y)\nxg_test = xgb.DMatrix(test_X, label=test_Y)\n# setup parameters for xgboost\nparam = {}\n# use softmax multi-class classification\nparam['objective'] = 'multi:softmax'\n# scale weight of positive examples\nparam['eta'] = 0.1\nparam['max_depth'] = 6\nparam['nthread'] = 4\nparam['num_class'] = 6\n\nwatchlist = [(xg_train, 'train'), (xg_test, 'test')]\nnum_round = 50\nbst = xgb.train(param, xg_train, num_round, watchlist)\n# get prediction\npred = bst.predict(xg_test)\nerror_rate = np.sum(pred != test_Y) / test_Y.shape[0]\nprint('Test error using softmax = {}'.format(error_rate))\n\n# do the same thing again, but output probabilities\nparam['objective'] = 'multi:softprob'\nbst = xgb.train(param, xg_train, num_round, watchlist, \n                callbacks=[AimCallback(repo='.', experiment='xgboost_test')])\n# Note: this convention has been changed since xgboost-unity\n# get prediction, this is in 1D array, need reshape to (ndata, nclass)\npred_prob = bst.predict(xg_test).reshape(test_Y.shape[0], 6)\npred_label = np.argmax(pred_prob, axis=1)\nerror_rate = np.sum(pred_label != test_Y) / test_Y.shape[0]\nprint('Test error using softprob = {}'.format(error_rate))\n```\n\nAs you can see on line 49, AimCallback is imported from `aim.xgboost` and passed to `xgb.train` as one of the callbacks. Aim session can open and close by the AimCallback and the metrics and hparamsstore by XGBoost. In addition to that, thesystem measures pass to Aim as well.\n\n## What it looks like?\n\nAfter you run the experiment and the `aim up` command in the `aim_logs`directory, Aim UI will be running. When first opened, the dashboard page will come up.\n\n![](https://aimstack.io/wp-content/uploads/2021/05/dashboard.png \"Aim UI dashboard page\")\n\nTo explore the run, we should:\n\n* Choose the `xgboost_test`experiment.\n* Select the metrics to explore.\n* Divide into charts by metrics.\n\nFor example, the gif below illustrates the steps above.\n\n![](https://aimstack.io/wp-content/uploads/2021/05/1.gif)\n\n\\\n So this is what the final result looks like.\n\n![](https://aimstack.io/wp-content/uploads/2021/05/2.png)\n\nIn short, we can easily analyze the runs and the system usage.\n\n## Learn More\n\n[Aim is on a mission to democratize AI dev tools.](https://github.com/aimhubio/aim#democratizing-ai-dev-tools)\n\nIf you find Aim useful, support us and star [the project](https://github.com/aimhubio/aim) on GitHub. Also, join the [Aim community](https://aimstack.slack.com/ssb/redirect) and share more about your use-cases and how we can improve Aim to suit them.","html":"<h2>What is Aim?</h2>\n<p><a href=\"https://github.com/aimhubio/aim\">Aim</a> is an open-source tool for AI experiment comparison. With more resources and complex models, more experiments are ran than ever. You can indeed use Aim to deeply inspect thousands of hyperparameter-sensitive training runs.</p>\n<h2>What is XGBoost?</h2>\n<p><a href=\"https://github.com/dmlc/xgboost\">XGBoost</a> is an optimized gradient boosting library with highly  <em>efficient</em>,  <em>flexible,</em>  and  <em>portable</em> design. XGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solves many data science problems in a fast and accurate way. Subsequently, the same code runs on major distributed environment (Kubernetes, Hadoop, SGE, MPI, Dask) and can solve problems beyond billions of examples.</p>\n<h2>How to use Aim with XGBoost?</h2>\n<p>Check out end-to-end <a href=\"https://aimstack.io/aim-2-4-0-xgboost-integration-and-confidence-interval-aggregation/\">Aim integration</a> examples with multiple frameworks <a href=\"https://github.com/aimhubio/aim/tree/main/examples\">here</a>. In this tutorial, we are going to show how to integrate Aim and use AimCallback in your XGBoost code.</p>\n<pre><code># You should download and extract the data beforehand. Simply by doing this: \n# wget https://archive.ics.uci.edu/ml/machine-learning-databases/dermatology/dermatology.data\n\nfrom __future__ import division\n\nimport numpy as np\nimport xgboost as xgb\nfrom aim.xgboost import AimCallback\n\n# label need to be 0 to num_class -1\ndata = np.loadtxt('./dermatology.data', delimiter=',',\n        converters={33: lambda x:int(x == '?'), 34: lambda x:int(x) - 1})\nsz = data.shape\n\ntrain = data[:int(sz[0] * 0.7), :]\ntest = data[int(sz[0] * 0.7):, :]\n\ntrain_X = train[:, :33]\ntrain_Y = train[:, 34]\n\ntest_X = test[:, :33]\ntest_Y = test[:, 34]\nprint(len(train_X))\n\nxg_train = xgb.DMatrix(train_X, label=train_Y)\nxg_test = xgb.DMatrix(test_X, label=test_Y)\n# setup parameters for xgboost\nparam = {}\n# use softmax multi-class classification\nparam['objective'] = 'multi:softmax'\n# scale weight of positive examples\nparam['eta'] = 0.1\nparam['max_depth'] = 6\nparam['nthread'] = 4\nparam['num_class'] = 6\n\nwatchlist = [(xg_train, 'train'), (xg_test, 'test')]\nnum_round = 50\nbst = xgb.train(param, xg_train, num_round, watchlist)\n# get prediction\npred = bst.predict(xg_test)\nerror_rate = np.sum(pred != test_Y) / test_Y.shape[0]\nprint('Test error using softmax = {}'.format(error_rate))\n\n# do the same thing again, but output probabilities\nparam['objective'] = 'multi:softprob'\nbst = xgb.train(param, xg_train, num_round, watchlist, \n                callbacks=[AimCallback(repo='.', experiment='xgboost_test')])\n# Note: this convention has been changed since xgboost-unity\n# get prediction, this is in 1D array, need reshape to (ndata, nclass)\npred_prob = bst.predict(xg_test).reshape(test_Y.shape[0], 6)\npred_label = np.argmax(pred_prob, axis=1)\nerror_rate = np.sum(pred_label != test_Y) / test_Y.shape[0]\nprint('Test error using softprob = {}'.format(error_rate))\n</code></pre>\n<p>As you can see on line 49, AimCallback is imported from <code>aim.xgboost</code> and passed to <code>xgb.train</code> as one of the callbacks. Aim session can open and close by the AimCallback and the metrics and hparamsstore by XGBoost. In addition to that, thesystem measures pass to Aim as well.</p>\n<h2>What it looks like?</h2>\n<p>After you run the experiment and the <code>aim up</code> command in the <code>aim_logs</code>directory, Aim UI will be running. When first opened, the dashboard page will come up.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/05/dashboard.png\" alt=\"\" title=\"Aim UI dashboard page\"></p>\n<p>To explore the run, we should:</p>\n<ul>\n<li>Choose the <code>xgboost_test</code>experiment.</li>\n<li>Select the metrics to explore.</li>\n<li>Divide into charts by metrics.</li>\n</ul>\n<p>For example, the gif below illustrates the steps above.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/05/1.gif\" alt=\"\"></p>\n<p><br>\nSo this is what the final result looks like.</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2021/05/2.png\" alt=\"\"></p>\n<p>In short, we can easily analyze the runs and the system usage.</p>\n<h2>Learn More</h2>\n<p><a href=\"https://github.com/aimhubio/aim#democratizing-ai-dev-tools\">Aim is on a mission to democratize AI dev tools.</a></p>\n<p>If you find Aim useful, support us and star <a href=\"https://github.com/aimhubio/aim\">the project</a> on GitHub. Also, join the <a href=\"https://aimstack.slack.com/ssb/redirect\">Aim community</a> and share more about your use-cases and how we can improve Aim to suit them.</p>"},"_id":"an-end-to-end-example-of-aim-logger-used-with-xgboost-library.md","_raw":{"sourceFilePath":"an-end-to-end-example-of-aim-logger-used-with-xgboost-library.md","sourceFileName":"an-end-to-end-example-of-aim-logger-used-with-xgboost-library.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"an-end-to-end-example-of-aim-logger-used-with-xgboost-library"},"type":"Post"},{"title":"How to tune hyperparams with fixed seeds using PyTorch Lightning and Aim","date":"2021-03-11T12:46:00.000Z","author":"Gev Soghomonian","description":"What is a random seed and how is it important? The random seed is a number for initializing the pseudorandom number generator. It can have...","slug":"how-to-tune-hyperparams-with-fixed-seeds-using-pytorch-lightning-and-aim","image":"https://aimstack.io/wp-content/uploads/2021/03/pytorch.png","draft":false,"categories":["Tutorials"],"body":{"raw":"## What is a random seed and how is it important?\n\nThe random seed is a number for initializing the pseudorandom number generator. It can have a huge impact on the training results. There are different ways of using the pseudorandom number generator in ML. Here are a few examples:\n\n* Initial weights of the model. When using not fully pre-trained models, one of the most common approaches is to generate the uninitialized weights randomly.\n* Dropout: a common technique in ML that freezes randomly chosen parts of the model during training and recovers them during evaluation.\n* Augmentation: a well-known technique, especially for semi-supervised problems. When the training data is limited, transformations on the available data are used to synthesize new data. Mostly you can randomly choose the transformations and how there application (e.g. change the brightness and its level).\n\nAs you can see, the random seed can have an influence on the result of training in several ways and add a huge variance. One thing you do not need when tuning hyper-parameters is variance.\n\nThe purpose of experimenting with hyper-parameters is to find the combination that produces the best results, but when the random seed is not fixed, it is not clear whether the difference was made by the hyperparameter change or the seed change. Therefore, you need to think about a way to train with fixed seed and different hyper-parameters. the need to train with a fixed seed, but different hyper-parameters (comes up)?.\n\nLater in this tutorial, I will show you how to effectively fix a seed for tuning hyper-parameters and how to monitor the results using [Aim](https://github.com/aimhubio/aim).\n\n## **How to fix the seed in PyTorch Lightning**\n\n\n\nFixing the seed for all imported modules is not as easy as it may seem. The way to fix the random seed for vanilla, non-framework code is to use standard Python`random.seed(seed)`, but it is not enough for PL.\n\nPytorch Lightning, like other frameworks, uses its own generated seeds. There are several ways to fix the seed manually. For PL, we use `pl.seed_everything(seed)` . See the docs [here](https://pytorch-lightning.readthedocs.io/en/0.7.6/api/pytorch_lightning.trainer.seed.html).\n\n> Note: in other libraries you would use something like: `np.random.seed()` or `torch.manual_seed()` \n\n## **Implementation**\n\n\n\nFind the full code for this and other tutorials [here](https://github.com/aimhubio/tutorials/tree/main/fixed-seed).\n\n```\nimport torch\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import CIFAR10\nfrom torchvision.models import resnet18\nfrom torchvision import transforms\nimport pytorch_lightning as pl\nfrom aim.pytorch_lightning import AimLogger\n\nclass ImageClassifierModel(pl.LightningModule):\n\n    def __init__(self, seed, lr, optimizer):\n        super(ImageClassifierModel, self).__init__()\n        pl.seed_everything(seed)\n        # This fixes a seed for all the modules used by pytorch-lightning\n        # Note: using random.seed(seed) is not enough, there are multiple\n        # other seeds like hash seed, seed for numpy etc.\n        self.lr = lr\n        self.optimizer = optimizer\n        self.total_classified = 0\n        self.correctly_classified = 0\n        self.model = resnet18(pretrained = True, progress = True)\n        self.model.fc = torch.nn.Linear(in_features=512, out_features=10, bias=True)\n        # changing the last layer from 1000 out_features to 10 because the model\n        # is pretrained on ImageNet which has 1000 classes but CIFAR10 has 10\n        self.model.to('cuda') # moving the model to cuda\n\n    def train_dataloader(self):\n        # makes the training dataloader\n        train_ds = CIFAR10('.', train = True, transform = transforms.ToTensor(), download = True)\n        train_loader = DataLoader(train_ds, batch_size=32)\n        return train_loader\n        \n    def val_dataloader(self):\n        # makes the validation dataloader\n        val_ds = CIFAR10('.', train = False, transform = transforms.ToTensor(), download = True)\n        val_loader = DataLoader(val_ds, batch_size=32)\n        return val_loader\n\n    def forward(self, x):\n        return self.model.forward(x)\n\n    def training_step(self, batch, batch_nb):\n        x, y = batch\n        y_hat = self.model(x)\n        loss = F.cross_entropy(y_hat, y)\n        # calculating the cross entropy loss on the result\n        self.log('train_loss', loss)\n        # logging the loss with \"train_\" prefix\n        return loss\n\n    def validation_step(self, batch, batch_nb):\n        x, y = batch\n        y_hat = self.model(x)\n        loss = F.cross_entropy(y_hat, y)\n        # calculating the cross entropy loss on the result\n        self.total_classified += y.shape[0]\n        self.correctly_classified += (y_hat.argmax(1) == y).sum().item()\n        # Calculating total and correctly classified images to determine the accuracy later\n        self.log('val_loss', loss) \n        # logging the loss with \"val_\" prefix\n        return loss\n\n    def validation_epoch_end(self, results):\n        accuracy = self.correctly_classified / self.total_classified\n        self.log('val_accuracy', accuracy)\n        # logging accuracy\n        self.total_classified = 0\n        self.correctly_classified = 0\n        return accuracy\n\n    def configure_optimizers(self):\n        # Choose an optimizer and set up a learning rate according to hyperparameters\n        if self.optimizer == 'Adam':\n            return torch.optim.Adam(self.parameters(), lr=self.lr)\n        elif self.optimizer == 'SGD':\n            return torch.optim.SGD(self.parameters(), lr=self.lr)\n        else:\n            raise NotImplementedError\n\nif __name__ == \"__main__\":\n\n    seeds = [47, 881, 123456789]\n    lrs = [0.1, 0.01]\n    optimizers = ['SGD', 'Adam']\n\n    for seed in seeds:\n        for optimizer in optimizers:\n            for lr in lrs:\n                # choosing one set of hyperparaameters from the ones above\n            \n                model = ImageClassifierModel(seed, lr, optimizer)\n                # initializing the model we will train with the chosen hyperparameters\n\n                aim_logger = AimLogger(\n                    experiment='resnet18_classification',\n                    train_metric_prefix='train_',\n                    val_metric_prefix='val_',\n                )\n                aim_logger.log_hyperparams({\n                    'lr': lr,\n                    'optimizer': optimizer,\n                    'seed': seed\n                })\n                # initializing the aim logger and logging the hyperparameters\n\n                trainer = pl.Trainer(\n                    logger=aim_logger,\n                    gpus=1,\n                    max_epochs=5,\n                    progress_bar_refresh_rate=1,\n                    log_every_n_steps=10,\n                    check_val_every_n_epoch=1)\n                # making the pytorch-lightning trainer\n\n                trainer.fit(model)\n                # training the model\n```\n\n\n\n## Analyzing the Training Runs\n\nAfter each set of training runs you need to analyze the results/logs. Use Aim to group the runs by metrics/hyper-parameters (this can be done both on Explore and Dashboard after [Aim 1.3.5 release](https://aimstack.io/mlops-tools-aim-1-3-5-activity-view-and-x-axis-alignment/)) and have multiple charts of different metrics on the same screen.\n\nDo the following steps to see the different effects of the optimizers\n\n* Go to dashboard, explore by experiment\n* Add loss to `SELECT` and divide into subplots by metric\n* Group by experiment to make all metrics of similar color\n* Group by style by optimizer to see different optimizers on loss and accuracy and its effects\n\nHere is how it looks on Aim:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/10.gif)\n\n![](https://aimstack.io/wp-content/uploads/2022/02/11.png)\n\n\n\nFrom the final result it is clear that the SGD (broken lines) optimizer has achieved higher accuracy and lower loss during the training.\n\nIf you apply the same settings to the learning rate, this is the result:\n\n## For the next step to analyze how learning rate affects the experiments, do the following steps:\n\n\n\n* Remove both previous groupings\n* Group by color by learning rate\n\n![](https://aimstack.io/wp-content/uploads/2022/02/12.gif)\n\n![](https://aimstack.io/wp-content/uploads/2022/02/13.png)\n\nAs you can see, the purple lines (lr = 0.01) represent significantly lower loss and higher accuracy.\n\nWe showed that in this case, the choice of the optimizer and learning rate is not dependent on the random seed and it is safe to say that the SGD optimizer with a 0.01 learning rate is the best choice we can make.\n\nOn top of this, if we also add grouping by style by optimizer:\n\n![](https://aimstack.io/wp-content/uploads/2022/02/24.gif)\n\n![](https://aimstack.io/wp-content/uploads/2022/02/25.png)\n\nNow, it is obvious that the the runs with SGD optimizer and `lr=0.01` (green, broken lines) are the best choices for all the seeds we have tried.\n\nFixing random seeds is a useful technique that can help step-up your hyper-parameter tuning. This is how to use Aim and PyTorch Lightning to tune hyper-parameters with a fixed seed.\n\n## Learn More\n\n\n\nIf you find Aim useful, support us and [star the project](https://github.com/aimhubio/aim) on GitHub. Join the [Aim community](https://aimstack.slack.com/?redir=%2Fssb%2Fredirect) and share more about your use-cases and how we can improve Aim to suit them.","html":"<h2>What is a random seed and how is it important?</h2>\n<p>The random seed is a number for initializing the pseudorandom number generator. It can have a huge impact on the training results. There are different ways of using the pseudorandom number generator in ML. Here are a few examples:</p>\n<ul>\n<li>Initial weights of the model. When using not fully pre-trained models, one of the most common approaches is to generate the uninitialized weights randomly.</li>\n<li>Dropout: a common technique in ML that freezes randomly chosen parts of the model during training and recovers them during evaluation.</li>\n<li>Augmentation: a well-known technique, especially for semi-supervised problems. When the training data is limited, transformations on the available data are used to synthesize new data. Mostly you can randomly choose the transformations and how there application (e.g. change the brightness and its level).</li>\n</ul>\n<p>As you can see, the random seed can have an influence on the result of training in several ways and add a huge variance. One thing you do not need when tuning hyper-parameters is variance.</p>\n<p>The purpose of experimenting with hyper-parameters is to find the combination that produces the best results, but when the random seed is not fixed, it is not clear whether the difference was made by the hyperparameter change or the seed change. Therefore, you need to think about a way to train with fixed seed and different hyper-parameters. the need to train with a fixed seed, but different hyper-parameters (comes up)?.</p>\n<p>Later in this tutorial, I will show you how to effectively fix a seed for tuning hyper-parameters and how to monitor the results using <a href=\"https://github.com/aimhubio/aim\">Aim</a>.</p>\n<h2><strong>How to fix the seed in PyTorch Lightning</strong></h2>\n<p>Fixing the seed for all imported modules is not as easy as it may seem. The way to fix the random seed for vanilla, non-framework code is to use standard Python<code>random.seed(seed)</code>, but it is not enough for PL.</p>\n<p>Pytorch Lightning, like other frameworks, uses its own generated seeds. There are several ways to fix the seed manually. For PL, we use <code>pl.seed_everything(seed)</code> . See the docs <a href=\"https://pytorch-lightning.readthedocs.io/en/0.7.6/api/pytorch_lightning.trainer.seed.html\">here</a>.</p>\n<blockquote>\n<p>Note: in other libraries you would use something like: <code>np.random.seed()</code> or <code>torch.manual_seed()</code> </p>\n</blockquote>\n<h2><strong>Implementation</strong></h2>\n<p>Find the full code for this and other tutorials <a href=\"https://github.com/aimhubio/tutorials/tree/main/fixed-seed\">here</a>.</p>\n<pre><code>import torch\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import CIFAR10\nfrom torchvision.models import resnet18\nfrom torchvision import transforms\nimport pytorch_lightning as pl\nfrom aim.pytorch_lightning import AimLogger\n\nclass ImageClassifierModel(pl.LightningModule):\n\n    def __init__(self, seed, lr, optimizer):\n        super(ImageClassifierModel, self).__init__()\n        pl.seed_everything(seed)\n        # This fixes a seed for all the modules used by pytorch-lightning\n        # Note: using random.seed(seed) is not enough, there are multiple\n        # other seeds like hash seed, seed for numpy etc.\n        self.lr = lr\n        self.optimizer = optimizer\n        self.total_classified = 0\n        self.correctly_classified = 0\n        self.model = resnet18(pretrained = True, progress = True)\n        self.model.fc = torch.nn.Linear(in_features=512, out_features=10, bias=True)\n        # changing the last layer from 1000 out_features to 10 because the model\n        # is pretrained on ImageNet which has 1000 classes but CIFAR10 has 10\n        self.model.to('cuda') # moving the model to cuda\n\n    def train_dataloader(self):\n        # makes the training dataloader\n        train_ds = CIFAR10('.', train = True, transform = transforms.ToTensor(), download = True)\n        train_loader = DataLoader(train_ds, batch_size=32)\n        return train_loader\n        \n    def val_dataloader(self):\n        # makes the validation dataloader\n        val_ds = CIFAR10('.', train = False, transform = transforms.ToTensor(), download = True)\n        val_loader = DataLoader(val_ds, batch_size=32)\n        return val_loader\n\n    def forward(self, x):\n        return self.model.forward(x)\n\n    def training_step(self, batch, batch_nb):\n        x, y = batch\n        y_hat = self.model(x)\n        loss = F.cross_entropy(y_hat, y)\n        # calculating the cross entropy loss on the result\n        self.log('train_loss', loss)\n        # logging the loss with \"train_\" prefix\n        return loss\n\n    def validation_step(self, batch, batch_nb):\n        x, y = batch\n        y_hat = self.model(x)\n        loss = F.cross_entropy(y_hat, y)\n        # calculating the cross entropy loss on the result\n        self.total_classified += y.shape[0]\n        self.correctly_classified += (y_hat.argmax(1) == y).sum().item()\n        # Calculating total and correctly classified images to determine the accuracy later\n        self.log('val_loss', loss) \n        # logging the loss with \"val_\" prefix\n        return loss\n\n    def validation_epoch_end(self, results):\n        accuracy = self.correctly_classified / self.total_classified\n        self.log('val_accuracy', accuracy)\n        # logging accuracy\n        self.total_classified = 0\n        self.correctly_classified = 0\n        return accuracy\n\n    def configure_optimizers(self):\n        # Choose an optimizer and set up a learning rate according to hyperparameters\n        if self.optimizer == 'Adam':\n            return torch.optim.Adam(self.parameters(), lr=self.lr)\n        elif self.optimizer == 'SGD':\n            return torch.optim.SGD(self.parameters(), lr=self.lr)\n        else:\n            raise NotImplementedError\n\nif __name__ == \"__main__\":\n\n    seeds = [47, 881, 123456789]\n    lrs = [0.1, 0.01]\n    optimizers = ['SGD', 'Adam']\n\n    for seed in seeds:\n        for optimizer in optimizers:\n            for lr in lrs:\n                # choosing one set of hyperparaameters from the ones above\n            \n                model = ImageClassifierModel(seed, lr, optimizer)\n                # initializing the model we will train with the chosen hyperparameters\n\n                aim_logger = AimLogger(\n                    experiment='resnet18_classification',\n                    train_metric_prefix='train_',\n                    val_metric_prefix='val_',\n                )\n                aim_logger.log_hyperparams({\n                    'lr': lr,\n                    'optimizer': optimizer,\n                    'seed': seed\n                })\n                # initializing the aim logger and logging the hyperparameters\n\n                trainer = pl.Trainer(\n                    logger=aim_logger,\n                    gpus=1,\n                    max_epochs=5,\n                    progress_bar_refresh_rate=1,\n                    log_every_n_steps=10,\n                    check_val_every_n_epoch=1)\n                # making the pytorch-lightning trainer\n\n                trainer.fit(model)\n                # training the model\n</code></pre>\n<h2>Analyzing the Training Runs</h2>\n<p>After each set of training runs you need to analyze the results/logs. Use Aim to group the runs by metrics/hyper-parameters (this can be done both on Explore and Dashboard after <a href=\"https://aimstack.io/mlops-tools-aim-1-3-5-activity-view-and-x-axis-alignment/\">Aim 1.3.5 release</a>) and have multiple charts of different metrics on the same screen.</p>\n<p>Do the following steps to see the different effects of the optimizers</p>\n<ul>\n<li>Go to dashboard, explore by experiment</li>\n<li>Add loss to <code>SELECT</code> and divide into subplots by metric</li>\n<li>Group by experiment to make all metrics of similar color</li>\n<li>Group by style by optimizer to see different optimizers on loss and accuracy and its effects</li>\n</ul>\n<p>Here is how it looks on Aim:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/10.gif\" alt=\"\"></p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/11.png\" alt=\"\"></p>\n<p>From the final result it is clear that the SGD (broken lines) optimizer has achieved higher accuracy and lower loss during the training.</p>\n<p>If you apply the same settings to the learning rate, this is the result:</p>\n<h2>For the next step to analyze how learning rate affects the experiments, do the following steps:</h2>\n<ul>\n<li>Remove both previous groupings</li>\n<li>Group by color by learning rate</li>\n</ul>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/12.gif\" alt=\"\"></p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/13.png\" alt=\"\"></p>\n<p>As you can see, the purple lines (lr = 0.01) represent significantly lower loss and higher accuracy.</p>\n<p>We showed that in this case, the choice of the optimizer and learning rate is not dependent on the random seed and it is safe to say that the SGD optimizer with a 0.01 learning rate is the best choice we can make.</p>\n<p>On top of this, if we also add grouping by style by optimizer:</p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/24.gif\" alt=\"\"></p>\n<p><img src=\"https://aimstack.io/wp-content/uploads/2022/02/25.png\" alt=\"\"></p>\n<p>Now, it is obvious that the the runs with SGD optimizer and <code>lr=0.01</code> (green, broken lines) are the best choices for all the seeds we have tried.</p>\n<p>Fixing random seeds is a useful technique that can help step-up your hyper-parameter tuning. This is how to use Aim and PyTorch Lightning to tune hyper-parameters with a fixed seed.</p>\n<h2>Learn More</h2>\n<p>If you find Aim useful, support us and <a href=\"https://github.com/aimhubio/aim\">star the project</a> on GitHub. Join the <a href=\"https://aimstack.slack.com/?redir=%2Fssb%2Fredirect\">Aim community</a> and share more about your use-cases and how we can improve Aim to suit them.</p>"},"_id":"how-to-tune-hyperparams-with-fixed-seeds-using-pytorch-lightning-and-aim.md","_raw":{"sourceFilePath":"how-to-tune-hyperparams-with-fixed-seeds-using-pytorch-lightning-and-aim.md","sourceFileName":"how-to-tune-hyperparams-with-fixed-seeds-using-pytorch-lightning-and-aim.md","sourceFileDir":".","contentType":"markdown","flattenedPath":"how-to-tune-hyperparams-with-fixed-seeds-using-pytorch-lightning-and-aim"},"type":"Post"}]},"__N_SSG":true}